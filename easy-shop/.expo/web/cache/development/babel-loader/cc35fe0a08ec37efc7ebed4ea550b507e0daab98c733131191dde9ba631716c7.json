{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTabBar = undefined;\nvar _jsxFileName = 'src/basic/Tabs/DefaultTabBar.js';\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"./../../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _TabHeading = require(\"../TabHeading\");\nvar _Text = require(\"../Text\");\nvar _TabContainer = require(\"../TabContainer\");\nvar _utils = require(\"../../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar StyleSheet = ReactNative.StyleSheet,\n  View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  Platform = ReactNative.Platform;\nvar Button = require(\"./Button\");\nvar DefaultTabBar = (0, _createReactClass2.default)({\n  displayName: 'DefaultTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    disabledTextColor: _propTypes2.default.string,\n    tabStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    tabContainerStyle: _utils.ViewPropTypes.style,\n    accessible: _propTypes2.default.array,\n    accessibilityLabel: _propTypes2.default.array\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      activeTextColor: _platform2.default.topTabBarActiveTextColor,\n      inactiveTextColor: _platform2.default.topTabBarTextColor,\n      disabledTextColor: _platform2.default.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  renderTabOption: function renderTabOption(name, page) {},\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize, disabled, disabledTextColor, accessible, accessibilityLabel) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n      activeTextColor = _props.activeTextColor,\n      inactiveTextColor = _props.inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    var isDisabled = disabled !== undefined;\n    var textColor = void 0;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor;\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor;\n    }\n    var accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false\n    };\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        style: {\n          flex: 1\n        },\n        disabled: isDisabled,\n        key: name,\n        accessible: accessible,\n        accessibilityRole: 'tab',\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: accessibilityState,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [{\n          fontSize: tabFontSize\n        }, isTabActive ? activeTextStyle : textStyle, {\n          color: textColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, name)));\n    }\n    return _react2.default.createElement(Button, {\n      style: {\n        flex: 1\n      },\n      disabled: isDisabled,\n      key: _lodash2.default.random(1.2, 5.2),\n      accessible: accessible,\n      accessibilityRole: 'tab',\n      accessibilityLabel: accessibilityLabel,\n      accessibilityState: accessibilityState,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, headerContent));\n  },\n  render: function render() {\n    var _this = this;\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var platformStyle = variables.platformStyle;\n    var containerWidth = this.props.containerWidth;\n    var numberOfTabs = this.props.tabs.length;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return _react2.default.createElement(_TabContainer.TabContainer, {\n      style: [{\n        backgroundColor: variables.tabDefaultBg\n      }, this.props.tabContainerStyle ? this.props.tabContainerStyle : {}],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize, _this.props.disabled[page], _this.props.disabledTextColor, _this.props.accessible[page], _this.props.accessibilityLabel[page]);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, {\n        left: left\n      }, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      }\n    }));\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.DefaultTabBar', {}, _mapPropsToStyleNames2.default)(DefaultTabBar);\nexports.DefaultTabBar = StyledTab;","map":{"version":3,"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;;;AACA;IAEQA,U,GAAyCC,W,CAAzCD,U;EAAYE,I,GAA6BD,W,CAA7BC,I;EAAMC,Q,GAAuBF,W,CAAvBE,Q;EAAUC,Q,GAAaH,W,CAAbG,Q;AACpC,IAAMC,SAASC,mBAAf;AAEA,IAAMC,gBAAgB,gCAAiB;EAAAC;EACrCC,WAAW;IACTC,UAAUC,oBAAUC,IADX;IAETC,WAAWF,oBAAUG,MAFZ;IAGTC,MAAMJ,oBAAUK,KAHP;IAITC,iBAAiBN,oBAAUO,MAJlB;IAKTC,iBAAiBR,oBAAUO,MALlB;IAMTE,mBAAmBT,oBAAUO,MANpB;IAOTG,mBAAmBV,oBAAUO,MAPpB;IAQTI,UAAUC,qBAAcC,KARf;IASTC,WAAWd,oBAAUC,IATZ;IAUTc,gBAAgBH,qBAAcC,KAVrB;IAWTG,mBAAmBJ,qBAAcC,KAXxB;IAYTI,YAAYjB,oBAAUK,KAZb;IAaTa,oBAAoBlB,oBAAUK;EAbrB,CAD0B;EAgBrCc,cAAc;IACZC,OAAOpB,oBAAUqB;EADL,CAhBuB;EAoBrCC,eApBqC,6BAoBnB;IAChB,OAAO;MACLd,iBAAiBe,mBAASC,wBADrB;MAELf,mBAAmBc,mBAASE,kBAFvB;MAGLf,mBAAmBa,mBAASG,uBAHvB;MAILpB,iBAAiB,aAJZ;MAKLqB,aAAaJ,mBAASI;IALjB,CAAP;EAOD,CA5BoC;EA8BrCC,eA9BqC,2BA8BrBC,IA9BqB,EA8BfC,IA9Be,EA8BT,CAAE,CA9BO;EAgCrChB,SAhCqC,qBAiCnCe,IAjCmC,EAkCnCC,IAlCmC,EAmCnCC,WAnCmC,EAoCnCC,cApCmC,EAqCnCrB,QArCmC,EAsCnCsB,cAtCmC,EAuCnCC,SAvCmC,EAwCnCC,eAxCmC,EAyCnCC,cAzCmC,EA0CnCT,WA1CmC,EA2CnCU,QA3CmC,EA4CnC3B,iBA5CmC,EA6CnCO,UA7CmC,EA8CnCC,kBA9CmC,EA+CnC;IACA,IAAMoB,gBACJ,OAAOT,IAAP,KAAgB,QAAhB,GAA2BA,KAAKU,KAAL,CAAWC,QAAtC,GAAiDC,SADnD;IADA,aAG+C,KAAKF,KAHpD;MAGQ/B,eAHR,UAGQA,eAHR;MAGyBC,iBAHzB,UAGyBA,iBAHzB;IAIA,IAAMiC,aAAaX,cAAc,MAAd,GAAuB,QAA1C;IACA,IAAMY,aAAaN,aAAaI,SAAhC;IACA,IAAIG,kBAAJ;IACA,IAAID,UAAJ,EAAgB;MACdC,YAAYlC,iBAAZ;IACD,CAFD,MAEO,IAAIqB,WAAJ,EAAiB;MACtBa,YAAYT,kBAAkBA,gBAAgBU,KAAlC,GAA0CrC,eAAtD;IACD,CAFM,MAEA;MACLoC,YAAYV,YAAYA,UAAUW,KAAtB,GAA8BpC,iBAA1C;IACD;IACD,IAAMqC,qBAAqB;MACzBT,UAAUM,aAAa,IAAb,GAAoB,KADL;MAEzBI,UAAUhB,cAAc,IAAd,GAAqB;IAFN,CAA3B;IAIA,IAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;MAC5B,OACEmB,8BAACtD,MAAD;QACEmB,OAAO;UAAEoC,MAAM;QAAR,CADT;QAEEZ,UAAUM,UAFZ;QAGEO,KAAKrB,IAHP;QAIEZ,YAAYA,UAJd;QAKEkC,mBAAkB,KALpB;QAMEjC,oBAAoBA,kBANtB;QAOE4B,oBAAoBA,kBAPtB;QAQEM,SAAS;UAAA,OAAMpB,eAAeF,IAAf,CAAN;QAAA,CARX;QAAAuB;UAAAC;UAAAC;QAAA;MAAA,GAUEP,8BAACQ,sBAAD;QACE3C,OAAOkB,cAAcE,cAAd,GAA+BtB,QADxC;QAEE8C,QAAQ1B,WAFV;QAAAsB;UAAAC;UAAAC;QAAA;MAAA,GAIEP,8BAACU,UAAD;QACE7C,OAAO,CACL;UAAE8C,UAAUhC;QAAZ,CADK,EAELI,cAAcI,eAAd,GAAgCD,SAF3B,EAGL;UAAEW,OAAOD;QAAT,CAHK,CADT;QAAAS;UAAAC;UAAAC;QAAA;MAAA,GAOG1B,IAPH,CAJF,CAVF,CADF;IA2BD;IACD,OACEmB,8BAACtD,MAAD;MACEmB,OAAO;QAAEoC,MAAM;MAAR,CADT;MAEEZ,UAAUM,UAFZ;MAGEO,KAAKU,iBAAEC,MAAF,CAAS,GAAT,EAAc,GAAd,CAHP;MAIE5C,YAAYA,UAJd;MAKEkC,mBAAkB,KALpB;MAMEjC,oBAAoBA,kBANtB;MAOE4B,oBAAoBA,kBAPtB;MAQEM,SAAS;QAAA,OAAMpB,eAAeF,IAAf,CAAN;MAAA,CARX;MAAAuB;QAAAC;QAAAC;MAAA;IAAA,GAUEP,8BAACQ,sBAAD;MAAY3C,OAAOuB,cAAnB;MAAmCqB,QAAQ1B,WAA3C;MAAAsB;QAAAC;QAAAC;MAAA;IAAA,GACGjB,aADH,CAVF,CADF;EAgBD,CA9GoC;EAgHrCwB,MAhHqC,oBAgH5B;IAAA;IACP,IAAMC,YAAY,KAAKC,OAAL,CAAa5C,KAAb,GACd,KAAK4C,OAAL,CAAa5C,KAAb,CAAmB,4BAAnB,EAAiD2C,SADnC,GAEdxC,kBAFJ;IAGA,IAAM0C,gBAAgBF,UAAUE,aAAhC;IACA,IAAMC,iBAAiB,KAAK3B,KAAL,CAAW2B,cAAlC;IACA,IAAMC,eAAe,KAAK5B,KAAL,CAAWnC,IAAX,CAAgBgE,MAArC;IACA,IAAMC,oBAAoB;MACxBC,UAAU,UADc;MAExBC,OAAOL,iBAAiBC,YAFA;MAGxBK,QAAQ,CAHgB;MAIxBlE,iBAAiByD,UAAUU,0BAJH;MAKxBC,QAAQ;IALgB,CAA1B;IAQA,IAAMC,OAAO,KAAKpC,KAAL,CAAWqC,WAAX,CAAuBC,WAAvB,CAAmC;MAC9CC,YAAY,CAAC,CAAD,EAAI,CAAJ,CADkC;MAE9CC,aAAa,CAAC,CAAD,EAAIb,iBAAiBC,YAArB;IAFiC,CAAnC,CAAb;IAIA,OACEnB,8BAACgC,0BAAD;MACEnE,OAAO,CACL;QAAEP,iBAAiByD,UAAUkB;MAA7B,CADK,EAEL,KAAK1C,KAAL,CAAWvB,iBAAX,GAA+B,KAAKuB,KAAL,CAAWvB,iBAA1C,GAA8D,EAFzD,CADT;MAAAqC;QAAAC;QAAAC;MAAA;IAAA,GAMG,KAAKhB,KAAL,CAAWnC,IAAX,CAAgB8E,GAAhB,CAAoB,UAACrD,IAAD,EAAOC,IAAP,EAAgB;MACnC,IAAMC,cAAcoD,MAAK5C,KAAL,CAAWrC,SAAX,KAAyB4B,IAA7C;MACA,IAAMhB,YAAYqE,MAAK5C,KAAL,CAAWzB,SAAX,IAAwBqE,MAAKrE,SAA/C;MACA,OAAOA,UACLe,IADK,EAELC,IAFK,EAGLC,WAHK,EAILoD,MAAK5C,KAAL,CAAWxC,QAJN,EAKLoF,MAAK5C,KAAL,CAAW5B,QAAX,CAAoBmB,IAApB,CALK,EAMLqD,MAAK5C,KAAL,CAAWN,cAAX,CAA0BH,IAA1B,CANK,EAOLqD,MAAK5C,KAAL,CAAWL,SAAX,CAAqBJ,IAArB,CAPK,EAQLqD,MAAK5C,KAAL,CAAWJ,eAAX,CAA2BL,IAA3B,CARK,EASLqD,MAAK5C,KAAL,CAAWH,cAAX,CAA0BN,IAA1B,CATK,EAULiC,UAAUpC,WAVL,EAWLwD,MAAK5C,KAAL,CAAWF,QAAX,CAAoBP,IAApB,CAXK,EAYLqD,MAAK5C,KAAL,CAAW7B,iBAZN,EAaLyE,MAAK5C,KAAL,CAAWtB,UAAX,CAAsBa,IAAtB,CAbK,EAcLqD,MAAK5C,KAAL,CAAWrB,kBAAX,CAA8BY,IAA9B,CAdK,CAAP;IAgBD,CAnBA,CANH,EA0BEkB,8BAACxD,QAAD,CAAUD,IAAV;MACEsB,OAAO,CAACwD,iBAAD,EAAoB;QAAEM;MAAF,CAApB,EAA8B,KAAKpC,KAAL,CAAWxB,cAAzC,CADT;MAAAsC;QAAAC;QAAAC;MAAA;IAAA,EA1BF,CADF;EAgCD;AAnKoC,CAAjB,CAAtB;AAuKA,IAAM6B,YAAY,0CAChB,0BADgB,EAEhB,EAFgB,EAGhBC,8BAHgB,EAIhBzF,aAJgB,CAAlB;QAKsBA,a,GAAbwF,S","names":["StyleSheet","ReactNative","View","Animated","Platform","Button","require","DefaultTabBar","displayName","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","style","renderTab","underlineStyle","tabContainerStyle","accessible","accessibilityLabel","contextTypes","theme","object","getDefaultProps","variable","topTabBarActiveTextColor","topTabBarTextColor","tabBarDisabledTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","disabled","headerContent","props","children","undefined","fontWeight","isDisabled","textColor","color","accessibilityState","selected","_react2","flex","key","accessibilityRole","onPress","__source","fileName","lineNumber","_TabHeading","active","_Text","fontSize","_","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","_TabContainer","tabDefaultBg","map","_this","StyledTab","mapPropsToStyleNames"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\Tabs\\DefaultTabBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n    accessible: PropTypes.array,\n    accessibilityLabel: PropTypes.array\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor,\n    accessible,\n    accessibilityLabel\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = disabled !== undefined;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n    const accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false,\n    };\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          accessible={accessible}\n          accessibilityRole='tab'\n          accessibilityLabel={accessibilityLabel}\n          accessibilityState={accessibilityState}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        accessible={accessible}\n        accessibilityRole='tab'\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={accessibilityState}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor,\n            this.props.accessible[page],\n            this.props.accessibilityLabel[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}