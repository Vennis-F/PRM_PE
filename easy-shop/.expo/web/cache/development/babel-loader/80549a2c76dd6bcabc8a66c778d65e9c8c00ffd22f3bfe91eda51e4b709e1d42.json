{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollableTab = undefined;\nvar _jsxFileName = 'src/basic/Tabs/ScrollableTabBar.js';\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _createReactClass = require('create-react-class');\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\nvar _lodash = require('lodash');\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"./../../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _TabHeading = require(\"../TabHeading\");\nvar _Text = require(\"../Text\");\nvar _TabContainer = require(\"../TabContainer\");\nvar _utils = require(\"../../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar Button = require(\"./Button\");\nvar ReactNative = require(\"react-native-web/dist/index\");\nvar View = ReactNative.View,\n  Animated = ReactNative.Animated,\n  StyleSheet = ReactNative.StyleSheet,\n  ScrollView = ReactNative.ScrollView,\n  Platform = ReactNative.Platform,\n  Dimensions = ReactNative.Dimensions;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar ScrollableTabBar = (0, _createReactClass2.default)({\n  displayName: 'ScrollableTabBar',\n  propTypes: {\n    goToPage: _propTypes2.default.func,\n    activeTab: _propTypes2.default.number,\n    tabs: _propTypes2.default.array,\n    backgroundColor: _propTypes2.default.string,\n    activeTextColor: _propTypes2.default.string,\n    inactiveTextColor: _propTypes2.default.string,\n    scrollOffset: _propTypes2.default.number,\n    style: _utils.ViewPropTypes.style,\n    tabStyle: _utils.ViewPropTypes.style,\n    tabsContainerStyle: _utils.ViewPropTypes.style,\n    renderTab: _propTypes2.default.func,\n    underlineStyle: _utils.ViewPropTypes.style,\n    onScroll: _propTypes2.default.func\n  },\n  contextTypes: {\n    theme: _propTypes2.default.object\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: _platform2.default.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: _platform2.default.tabFontSize\n    };\n  },\n  getInitialState: function getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n  updateView: function updateView(offset) {\n    var position = Math.floor(offset.value);\n    var pageOffset = offset.value % 1;\n    var tabCount = this.props.tabs.length;\n    var lastTabPosition = tabCount - 1;\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n  necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n  },\n  updateTabPanel: function updateTabPanel(position, pageOffset) {\n    var containerWidth = this._containerMeasurements.width;\n    var tabWidth = this._tabsMeasurements[position].width;\n    var nextTabMeasurements = this._tabsMeasurements[position + 1];\n    var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    var tabOffset = this._tabsMeasurements[position].left;\n    var absolutePageOffset = pageOffset * tabWidth;\n    var newScrollX = tabOffset + absolutePageOffset;\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    } else {\n      var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    }\n  },\n  updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {\n    var lineLeft = this._tabsMeasurements[position].left;\n    var lineRight = this._tabsMeasurements[position].right;\n    if (position < tabCount - 1) {\n      var nextTabLeft = this._tabsMeasurements[position + 1].left;\n      var nextTabRight = this._tabsMeasurements[position + 1].right;\n      var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler, tabStyle, activeTabStyle, textStyle, activeTextStyle, tabHeaderStyle, tabFontSize) {\n    var headerContent = typeof name !== 'string' ? name.props.children : undefined;\n    var _props = this.props,\n      activeTextColor = _props.activeTextColor,\n      inactiveTextColor = _props.inactiveTextColor;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    if (typeof name === 'string') {\n      return _react2.default.createElement(Button, {\n        key: name + '_' + page,\n        onPress: function onPress() {\n          return onPressHandler(page);\n        },\n        onLayout: onLayoutHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }, _react2.default.createElement(_TabHeading.TabHeading, {\n        scrollable: true,\n        style: isTabActive ? activeTabStyle : tabStyle,\n        active: isTabActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        style: [isTabActive ? activeTextStyle : textStyle, {\n          fontSize: tabFontSize\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        }\n      }, name)));\n    }\n    return _react2.default.createElement(Button, {\n      key: name + '_' + page,\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      onLayout: onLayoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      }\n    }, _react2.default.createElement(_TabHeading.TabHeading, {\n      scrollable: true,\n      style: tabHeaderStyle,\n      active: isTabActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      }\n    }, headerContent));\n  },\n  measureTab: function measureTab(page, event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      x = _event$nativeEvent$la.x,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    this._tabsMeasurements[page] = {\n      left: x,\n      right: x + width,\n      width: width,\n      height: height\n    };\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  render: function render() {\n    var _this = this;\n    var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n    var dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n    return _react2.default.createElement(View, {\n      style: [styles.container, {\n        backgroundColor: this.props.backgroundColor\n      }, this.props.style],\n      onLayout: this.onContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      }\n    }, _react2.default.createElement(ScrollView, {\n      automaticallyAdjustContentInsets: false,\n      ref: function ref(scrollView) {\n        _this._scrollView = scrollView;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      directionalLockEnabled: true,\n      onScroll: this.props.onScroll,\n      bounces: false,\n      scrollsToTop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      }\n    }, _react2.default.createElement(View, {\n      style: [styles.tabs, {\n        width: this.state._containerWidth\n      }, this.props.tabsContainerStyle],\n      ref: 'tabContainer',\n      onLayout: this.onTabContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page), _this.props.tabStyle[page], _this.props.activeTabStyle[page], _this.props.textStyle[page], _this.props.activeTextStyle[page], _this.props.tabHeaderStyle[page], variables.tabFontSize);\n    }), _react2.default.createElement(Animated.View, {\n      style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      }\n    }))));\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _lodash.isEqual)(this.props.tabs, nextProps.tabs) && this.state._containerWidth) {\n      this.setState({\n        _containerWidth: null\n      });\n    }\n  },\n  onTabContainerLayout: function onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    var width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({\n      _containerWidth: width\n    });\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  },\n  onContainerLayout: function onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({\n      value: this.props.scrollValue._value\n    });\n  }\n});\nvar StyledTab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ScrollableTab', {}, _mapPropsToStyleNames2.default)(ScrollableTabBar);\nexports.ScrollableTab = StyledTab;\nvar styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"mappings":"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","names":["Button","require","View","ReactNative","Animated","StyleSheet","ScrollView","Platform","Dimensions","WINDOW_WIDTH","get","width","ScrollableTabBar","displayName","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","ViewPropTypes","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","object","getDefaultProps","variable","tabDefaultBg","tabFontSize","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","_react2","key","onPress","onLayout","__source","fileName","lineNumber","_TabHeading","scrollable","active","_Text","fontSize","measureTab","event","nativeEvent","layout","height","_value","render","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","automaticallyAdjustContentInsets","ref","_this","scrollView","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","directionalLockEnabled","bounces","scrollsToTop","onTabContainerLayout","map","bind","UNSAFE_componentWillReceiveProps","nextProps","setState","e","StyledTab","mapPropsToStyleNames","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\Tabs\\ScrollableTabBar.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { isEqual } from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst Button = require('./Button');\nconst ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: variable.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (\n      this.necessarilyMeasurementsCompleted(\n        position,\n        position === lastTabPosition\n      )\n    ) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return (\n      this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements\n    );\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth =\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -=\n      (containerWidth -\n        (1 - pageOffset) * tabWidth -\n        pageOffset * nextTabWidth) /\n      2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    } else {\n      const rightBoundScroll =\n        this._tabContainerMeasurements.width -\n        this._containerMeasurements.width;\n      newScrollX =\n        newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    }\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft =\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      const newLineRight =\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    onLayoutHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    if (typeof name === 'string') {\n      return (\n        <Button\n          key={`${name}_${page}`}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading\n            scrollable\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                isTabActive ? activeTextStyle : textStyle,\n                { fontSize: tabFontSize }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        key={`${name}_${page}`}\n        onPress={() => onPressHandler(page)}\n        onLayout={onLayoutHandler}\n      >\n        <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n    \n  },\n\n  measureTab(page, event) {\n    const { x, width, height } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.backgroundColor },\n          this.props.style\n        ]}\n        onLayout={this.onContainerLayout}\n      >\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          ref={scrollView => {\n            this._scrollView = scrollView;\n          }}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled\n          onScroll={this.props.onScroll}\n          bounces={false}\n          scrollsToTop={false}\n        >\n          <View\n            style={[\n              styles.tabs,\n              { width: this.state._containerWidth },\n              this.props.tabsContainerStyle\n            ]}\n            ref={'tabContainer'}\n            onLayout={this.onTabContainerLayout}\n          >\n            {this.props.tabs.map((name, page) => {\n              const isTabActive = this.props.activeTab === page;\n              const renderTab = this.props.renderTab || this.renderTab;\n              return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.measureTab.bind(this, page),\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page],\n                variables.tabFontSize\n              );\n            })}\n            <Animated.View\n              style={[\n                tabUnderlineStyle,\n                dynamicTabUnderline,\n                this.props.underlineStyle\n              ]}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  },\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (\n      !isEqual(this.props.tabs, nextProps.tabs) &&\n      this.state._containerWidth\n    ) {\n      this.setState({ _containerWidth: null });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width });\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({ value: this.props.scrollValue._value });\n  }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.ScrollableTab',\n  {},\n  mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}