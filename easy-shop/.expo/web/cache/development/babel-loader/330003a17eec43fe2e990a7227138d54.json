{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Toast from \"react-native-toast-message\";\nimport baseURL from \"../../assets/common/baseUrl\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport var loginUser = function loginUser(user, dispatch) {\n  fetch(baseURL + \"users/login\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data) {\n      var token = data.token;\n      AsyncStorage.setItem(\"jwt\", token);\n      var decoded = jwt_decode(token);\n      console.log(\"[DECODE JWT] \", decoded);\n      dispatch(setCurrentUser(decoded, user));\n    } else {\n      logoutUser(dispatch);\n    }\n  }).catch(function (err) {\n    console.log(\"[ERROR - Auth.action.js]: \", err);\n    Toast.show({\n      topOffset: 60,\n      type: \"error\",\n      text1: \"Please provide correct credentials\",\n      text2: \"\"\n    });\n    logoutUser(dispatch);\n  });\n};\nexport var getUserProfile = function getUserProfile(id) {\n  console.log(\"---------------------\", id);\n  fetch(baseURL + \"users/\" + id, {\n    method: \"GET\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\nexport var logoutUser = function logoutUser(dispatch) {\n  AsyncStorage.removeItem(\"jwt\");\n  dispatch(setCurrentUser({}));\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"names":["jwt_decode","AsyncStorage","Toast","baseURL","SET_CURRENT_USER","loginUser","user","dispatch","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","token","setItem","decoded","console","log","setCurrentUser","logoutUser","catch","err","show","topOffset","type","text1","text2","getUserProfile","id","removeItem","payload","userProfile"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/Context/actions/Auth.actions.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\r\nimport { AsyncStorage } from \"react-native\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport baseURL from \"../../assets/common/baseUrl\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const loginUser = (user, dispatch) => {\r\n  fetch(`${baseURL}users/login`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(user),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        const token = data.token;\r\n        AsyncStorage.setItem(\"jwt\", token);\r\n        const decoded = jwt_decode(token);\r\n        console.log(\"[DECODE JWT] \", decoded);\r\n        dispatch(setCurrentUser(decoded, user));\r\n      } else {\r\n        logoutUser(dispatch);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"[ERROR - Auth.action.js]: \", err);\r\n      Toast.show({\r\n        topOffset: 60,\r\n        type: \"error\",\r\n        text1: \"Please provide correct credentials\",\r\n        text2: \"\",\r\n      });\r\n      logoutUser(dispatch);\r\n    });\r\n};\r\n\r\nexport const getUserProfile = (id) => {\r\n  console.log(\"---------------------\", id);\r\n  fetch(`${baseURL}users/${id}`, {\r\n    method: \"GET\",\r\n    body: JSON.stringify(user),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n};\r\n\r\nexport const logoutUser = (dispatch) => {\r\n  AsyncStorage.removeItem(\"jwt\");\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\nexport const setCurrentUser = (decoded, user) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n    userProfile: user,\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AAAC,SAC3BC,YAAY;AACrB,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,OAAO;AAEd,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAEC,QAAQ,EAAK;EAC3CC,KAAK,CAAIL,OAAO,kBAAe;IAC7BM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCC,IAAI,CAAC,UAACC,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;EAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI,EAAK;IACd,IAAIA,IAAI,EAAE;MACR,IAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;MACxBlB,YAAY,CAACmB,OAAO,CAAC,KAAK,EAAED,KAAK,CAAC;MAClC,IAAME,OAAO,GAAGrB,UAAU,CAACmB,KAAK,CAAC;MACjCG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAAC;MACrCd,QAAQ,CAACiB,cAAc,CAACH,OAAO,EAAEf,IAAI,CAAC,CAAC;IACzC,CAAC,MAAM;MACLmB,UAAU,CAAClB,QAAQ,CAAC;IACtB;EACF,CAAC,CAAC,CACDmB,KAAK,CAAC,UAACC,GAAG,EAAK;IACdL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEI,GAAG,CAAC;IAC9CzB,KAAK,CAAC0B,IAAI,CAAC;MACTC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,oCAAoC;MAC3CC,KAAK,EAAE;IACT,CAAC,CAAC;IACFP,UAAU,CAAClB,QAAQ,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,IAAM0B,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,EAAE,EAAK;EACpCZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEW,EAAE,CAAC;EACxC1B,KAAK,CAAIL,OAAO,cAAS+B,EAAE,EAAI;IAC7BzB,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCC,IAAI,CAAC,UAACC,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;EAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;IAAA,OAAKI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAAA,EAAC;AACtC,CAAC;AAED,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIlB,QAAQ,EAAK;EACtCN,YAAY,CAACkC,UAAU,CAAC,KAAK,CAAC;EAC9B5B,QAAQ,CAACiB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIH,OAAO,EAAEf,IAAI,EAAK;EAC/C,OAAO;IACLwB,IAAI,EAAE1B,gBAAgB;IACtBgC,OAAO,EAAEf,OAAO;IAChBgB,WAAW,EAAE/B;EACf,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}