{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\nvar _jsxFileName = 'src/basic/Button.js';\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _platform = require(\"../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _commonColor = require(\"../theme/variables/commonColor\");\nvar _computeProps = require(\"../utils/computeProps\");\nvar _computeProps2 = _interopRequireDefault(_computeProps);\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _Text = require(\"./Text\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n  function Button() {\n    _classCallCheck(this, Button);\n    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));\n  }\n  _createClass(Button, [{\n    key: 'getInitialStyle',\n    value: function getInitialStyle() {\n      return {\n        borderedBtn: {\n          borderWidth: this.props.bordered ? _platform2.default.buttonDefaultBorderWidth : undefined,\n          borderRadius: this.props.rounded && this.props.bordered ? _platform2.default.borderRadiusLarge : _platform2.default.buttonDefaultBorderRadius\n        }\n      };\n    }\n  }, {\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().borderedBtn\n      };\n      if (Array.isArray(this.props.style)) {\n        var flattenedStyle = this.props.style.reduce(function (accumulator, currentValue) {\n          return accumulator.concat(currentValue);\n        }, []);\n        return (0, _computeProps2.default)(_extends({}, this.props, {\n          style: flattenedStyle\n        }), defaultProps);\n      }\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      var children = _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? this.props.children : _react2.default.Children.map(this.props.children, function (child) {\n        return child && child.type === _Text.Text ? _react2.default.cloneElement(child, _extends({\n          uppercase: _this2.props.buttonUppercaseAndroidText === false ? false : variables.buttonUppercaseAndroidText\n        }, child.props)) : child;\n      });\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS || _reactNative.Platform.OS === _commonColor.PLATFORM.WEB || variables.androidRipple === false || _reactNative.Platform.Version < 21) {\n        return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({}, this.prepareRootProps(), {\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          activeOpacity: this.props.activeOpacity > 0 ? this.props.activeOpacity : _platform2.default.buttonDefaultActiveOpacity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }), children);\n      }\n      if (this.props.rounded) {\n        var buttonStyle = _extends({}, this.prepareRootProps().style);\n        var buttonFlex = this.props.full || this.props.block ? _platform2.default.buttonDefaultFlex : buttonStyle.flex;\n        return _react2.default.createElement(_reactNative.View, {\n          style: [{\n            maxHeight: buttonStyle.height\n          }, buttonStyle, {\n            paddingTop: undefined,\n            paddingBottom: undefined\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          }\n        }, _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n          ref: function ref(c) {\n            return _this2._root = c;\n          },\n          background: _reactNative.TouchableNativeFeedback.Ripple(this.props.androidRippleColor || variables.androidRippleColor, true)\n        }, this.prepareRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }), _react2.default.createElement(_reactNative.View, {\n          style: [styles.childContainer, {\n            paddingTop: buttonStyle.paddingTop,\n            paddingBottom: buttonStyle.paddingBottom,\n            height: buttonStyle.height,\n            flexGrow: buttonFlex\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          }\n        }, children)));\n      }\n      return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        },\n        onPress: this.props.onPress,\n        background: this.props.transparent ? _reactNative.TouchableNativeFeedback.Ripple('transparent') : _reactNative.TouchableNativeFeedback.Ripple(variables.androidRippleColor, false)\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }), _react2.default.createElement(_reactNative.View, _extends({}, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }), children));\n    }\n  }]);\n  return Button;\n}(_react.Component);\nButton.contextTypes = {\n  theme: _propTypes2.default.object\n};\nButton.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  block: _propTypes2.default.bool,\n  primary: _propTypes2.default.bool,\n  transparent: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  danger: _propTypes2.default.bool,\n  warning: _propTypes2.default.bool,\n  info: _propTypes2.default.bool,\n  bordered: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  rounded: _propTypes2.default.bool,\n  large: _propTypes2.default.bool,\n  small: _propTypes2.default.bool,\n  active: _propTypes2.default.bool\n});\nvar styles = _reactNative.StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nvar StyledButton = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Button', {}, _mapPropsToStyleNames2.default)(Button);\nexports.Button = StyledButton;","map":{"version":3,"mappings":"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","names":["Button","borderedBtn","borderWidth","props","bordered","variable","buttonDefaultBorderWidth","undefined","borderRadius","rounded","borderRadiusLarge","buttonDefaultBorderRadius","defaultProps","style","getInitialStyle","Array","isArray","flattenedStyle","reduce","accumulator","currentValue","concat","variables","context","theme","children","Platform","OS","PLATFORM","IOS","React","Children","map","child","type","Text","cloneElement","uppercase","_this2","buttonUppercaseAndroidText","WEB","androidRipple","Version","_react2","_reactNative","prepareRootProps","ref","_root","c","activeOpacity","buttonDefaultActiveOpacity","__source","fileName","lineNumber","buttonStyle","buttonFlex","full","block","buttonDefaultFlex","flex","maxHeight","height","paddingTop","paddingBottom","background","TouchableNativeFeedback","Ripple","androidRippleColor","styles","childContainer","flexGrow","onPress","transparent","Component","contextTypes","PropTypes","object","propTypes","TouchableOpacity","oneOfType","number","array","bool","primary","success","danger","warning","info","disabled","large","small","active","StyleSheet","create","flexShrink","flexDirection","justifyContent","alignItems","StyledButton","mapPropsToStyleNames"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\Button.js"],"sourcesContent":["/* eslint-disable new-cap */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Platform,\n  View,\n  TouchableNativeFeedback,\n  StyleSheet\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport { PLATFORM } from '../theme/variables/commonColor';\nimport computeProps from '../utils/computeProps';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Text } from './Text';\n\nclass Button extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  getInitialStyle() {\n    return {\n      borderedBtn: {\n        borderWidth: this.props.bordered\n          ? variable.buttonDefaultBorderWidth\n          : undefined,\n        borderRadius:\n          this.props.rounded && this.props.bordered\n            ? variable.borderRadiusLarge\n            : variable.buttonDefaultBorderRadius\n      }\n    };\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().borderedBtn\n    };\n\n    if (Array.isArray(this.props.style)) {\n      const flattenedStyle = this.props.style.reduce(\n        (accumulator, currentValue) => accumulator.concat(currentValue),\n        []\n      );\n      return computeProps(\n        { ...this.props, style: flattenedStyle },\n        defaultProps\n      );\n    }\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const children =\n      Platform.OS === PLATFORM.IOS\n        ? this.props.children\n        : React.Children.map(this.props.children, child =>\n            child && child.type === Text\n              ? React.cloneElement(child, {\n                uppercase: this.props.buttonUppercaseAndroidText === false\n                ? false : variables.buttonUppercaseAndroidText,\n                ...child.props\n              })\n              : child\n          );\n    if (\n      Platform.OS === PLATFORM.IOS ||\n      Platform.OS === PLATFORM.WEB ||\n      variables.androidRipple === false ||\n      Platform.Version < 21\n    ) {\n      return (\n        <TouchableOpacity\n          {...this.prepareRootProps()}\n          ref={c => (this._root = c)}\n          activeOpacity={\n            this.props.activeOpacity > 0\n              ? this.props.activeOpacity\n              : variable.buttonDefaultActiveOpacity\n          }\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n    if (this.props.rounded) {\n      const buttonStyle = { ...this.prepareRootProps().style };\n      const buttonFlex =\n        this.props.full || this.props.block\n          ? variable.buttonDefaultFlex\n          : buttonStyle.flex;\n      return (\n        <View\n          style={[\n            { maxHeight: buttonStyle.height },\n            buttonStyle,\n            { paddingTop: undefined, paddingBottom: undefined }\n          ]}\n        >\n          <TouchableNativeFeedback\n            ref={c => (this._root = c)}\n            background={TouchableNativeFeedback.Ripple(\n              this.props.androidRippleColor || variables.androidRippleColor,\n              true\n            )}\n            {...this.prepareRootProps()}\n          >\n            <View\n              style={[\n                // eslint-disable-next-line no-use-before-define\n                styles.childContainer,\n                {\n                  paddingTop: buttonStyle.paddingTop,\n                  paddingBottom: buttonStyle.paddingBottom,\n                  height: buttonStyle.height,\n                  flexGrow: buttonFlex\n                }\n              ]}\n            >\n              {children}\n            </View>\n          </TouchableNativeFeedback>\n        </View>\n      );\n    }\n    return (\n      <TouchableNativeFeedback\n        ref={c => (this._root = c)}\n        onPress={this.props.onPress}\n        background={\n          this.props.transparent\n            ? TouchableNativeFeedback.Ripple('transparent')\n            : TouchableNativeFeedback.Ripple(\n                variables.androidRippleColor,\n                false\n              )\n        }\n        {...this.prepareRootProps()}\n      >\n        <View {...this.prepareRootProps()}>{children}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n}\n\nButton.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  block: PropTypes.bool,\n  primary: PropTypes.bool,\n  transparent: PropTypes.bool,\n  success: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  bordered: PropTypes.bool,\n  disabled: PropTypes.bool,\n  rounded: PropTypes.bool,\n  large: PropTypes.bool,\n  small: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nconst StyledButton = connectStyle(\n  'NativeBase.Button',\n  {},\n  mapPropsToStyleNames\n)(Button);\nexport { StyledButton as Button };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}