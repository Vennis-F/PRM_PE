{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Radio = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/Radio.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _Ionicons = require(\"@expo/vector-icons/Ionicons\");\nvar _Ionicons2 = _interopRequireDefault(_Ionicons);\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _platform = require(\"../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _computeProps = require(\"../utils/computeProps\");\nvar _computeProps2 = _interopRequireDefault(_computeProps);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar Radio = function (_Component) {\n  _inherits(Radio, _Component);\n  function Radio() {\n    _classCallCheck(this, Radio);\n    return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));\n  }\n  _createClass(Radio, [{\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var defaultProps = {\n        standardStyle: false\n      };\n      return (0, _computeProps2.default)(this.props, defaultProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        ref: function ref(c) {\n          return _this2._root = c;\n        }\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }), _reactNative.Platform.OS === 'ios' && !this.props.standardStyle ? this.props.selected && _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: this.props.selectedColor ? this.props.selectedColor : variables.radioColor,\n          lineHeight: 25,\n          height: 20,\n          fontSize: variables.radioBtnSize\n        },\n        name: 'ios-checkmark',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }) : _react2.default.createElement(_Ionicons2.default, {\n        style: {\n          color: _reactNative.Platform.OS === 'ios' ? this.props.selected ? this.props.selectedColor ? this.props.selectedColor : variables.radioColor : this.props.color ? this.props.color : undefined : this.props.selected ? this.props.selectedColor ? this.props.selectedColor : variables.radioSelectedColorAndroid : this.props.color ? this.props.color : undefined,\n          lineHeight: variables.radioBtnLineHeight,\n          fontSize: variables.radioBtnSize\n        },\n        name: _reactNative.Platform.OS === 'ios' ? this.props.selected ? 'ios-radio-button-on' : 'ios-radio-button-off' : this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }));\n    }\n  }]);\n  return Radio;\n}(_react.Component);\nRadio.contextTypes = {\n  theme: _propTypes2.default.object\n};\nRadio.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  selected: _propTypes2.default.bool,\n  standardStyle: _propTypes2.default.bool\n});\nvar StyledRadio = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Radio', {}, _mapPropsToStyleNames2.default)(Radio);\nexports.Radio = StyledRadio;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;AACA;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,K;;;;;;;;uCAIe;MACjB,IAAMC,eAAe;QACnBC,eAAe;MADI,CAArB;MAIA,OAAO,4BAAa,KAAKC,KAAlB,EAAyBF,YAAzB,CAAP;IACD;;;6BAEQ;MAAA;MACP,IAAMG,YAAY,KAAKC,OAAL,CAAaC,KAAb,GACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,GAEdG,kBAFJ;MAIA,OACEC,8BAACC,6BAAD;QACEC,KAAK;UAAA,OAAMC,OAAKC,KAAL,GAAaC,CAAnB;QAAA;MADP,GAEM,KAAKC,gBAAL,EAFN;QAAAC;UAAAC;UAAAC;QAAA;MAAA,IAIGC,sBAASC,EAAT,KAAgB,KAAhB,IAAyB,CAAC,KAAKhB,KAAL,CAAWD,aAArC,GACC,KAAKC,KAAL,CAAWiB,QAAX,IACEZ,8BAACa,kBAAD;QACEC,OAAO;UACLC,OAAO,KAAKpB,KAAL,CAAWqB,aAAX,GACH,KAAKrB,KAAL,CAAWqB,aADR,GAEHpB,UAAUqB,UAHT;UAILC,YAAY,EAJP;UAKLC,QAAQ,EALH;UAMLC,UAAUxB,UAAUyB;QANf,CADT;QASEC,MAAK,eATP;QAAAf;UAAAC;UAAAC;QAAA;MAAA,EAFH,GAeCT,8BAACa,kBAAD;QACEC,OAAO;UACLC,OACEL,sBAASC,EAAT,KAAgB,KAAhB,GACI,KAAKhB,KAAL,CAAWiB,QAAX,GACE,KAAKjB,KAAL,CAAWqB,aAAX,GACE,KAAKrB,KAAL,CAAWqB,aADb,GAEEpB,UAAUqB,UAHd,GAIE,KAAKtB,KAAL,CAAWoB,KAAX,GACA,KAAKpB,KAAL,CAAWoB,KADX,GAEAQ,SAPN,GAQI,KAAK5B,KAAL,CAAWiB,QAAX,GACA,KAAKjB,KAAL,CAAWqB,aAAX,GACE,KAAKrB,KAAL,CAAWqB,aADb,GAEEpB,UAAU4B,yBAHZ,GAIA,KAAK7B,KAAL,CAAWoB,KAAX,GACA,KAAKpB,KAAL,CAAWoB,KADX,GAEAQ,SAhBD;UAiBLL,YAAYtB,UAAU6B,kBAjBjB;UAkBLL,UAAUxB,UAAUyB;QAlBf,CADT;QAqBEC,MACEZ,sBAASC,EAAT,KAAgB,KAAhB,GACI,KAAKhB,KAAL,CAAWiB,QAAX,GACE,qBADF,GAEE,sBAHN,GAII,KAAKjB,KAAL,CAAWiB,QAAX,GACA,oBADA,GAEA,qBA5BR;QAAAL;UAAAC;UAAAC;QAAA;MAAA,EAnBJ,CADF;IAsDD;;;EAvEiBiB,gB;AAAdlC,K,CACGmC,Y,GAAe;EACpB7B,OAAO8B,oBAAUC;AADG,C;AAyExBrC,MAAMsC,SAAN,gBACKC,8BAAiBD,SADtB;EAEElB,UAAUgB,oBAAUI,IAFtB;EAGEtC,eAAekC,oBAAUI;AAH3B;AAMA,IAAMC,cAAc,0CAAa,kBAAb,EAAiC,EAAjC,EAAqCC,8BAArC,EAClB1C,KADkB,CAApB;QAIwBA,K,GAAfyC,W","names":["Radio","defaultProps","standardStyle","props","variables","context","theme","variable","_react2","_reactNative","ref","_this2","_root","c","prepareRootProps","__source","fileName","lineNumber","Platform","OS","selected","_Ionicons2","style","color","selectedColor","radioColor","lineHeight","height","fontSize","radioBtnSize","name","undefined","radioSelectedColorAndroid","radioBtnLineHeight","Component","contextTypes","PropTypes","object","propTypes","TouchableOpacity","bool","StyledRadio","mapPropsToStyleNames"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\Radio.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport computeProps from '../utils/computeProps';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  prepareRootProps() {\n    const defaultProps = {\n      standardStyle: false\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <TouchableOpacity\n        ref={c => (this._root = c)}\n        {...this.prepareRootProps()}\n      >\n        {Platform.OS === 'ios' && !this.props.standardStyle ? (\n          this.props.selected && (\n            <Icon\n              style={{\n                color: this.props.selectedColor\n                  ? this.props.selectedColor\n                  : variables.radioColor,\n                lineHeight: 25,\n                height: 20,\n                fontSize: variables.radioBtnSize\n              }}\n              name=\"ios-checkmark\"\n            />\n          )\n        ) : (\n          <Icon\n            style={{\n              color:\n                Platform.OS === 'ios'\n                  ? this.props.selected\n                    ? this.props.selectedColor\n                      ? this.props.selectedColor\n                      : variables.radioColor\n                    : this.props.color\n                    ? this.props.color\n                    : undefined\n                  : this.props.selected\n                  ? this.props.selectedColor\n                    ? this.props.selectedColor\n                    : variables.radioSelectedColorAndroid\n                  : this.props.color\n                  ? this.props.color\n                  : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize\n            }}\n            name={\n              Platform.OS === 'ios'\n                ? this.props.selected\n                  ? 'ios-radio-button-on'\n                  : 'ios-radio-button-off'\n                : this.props.selected\n                ? 'md-radio-button-on'\n                : 'md-radio-button-off'\n            }\n          />\n        )}\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: PropTypes.bool,\n  standardStyle: PropTypes.bool\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(\n  Radio\n);\n\nexport { StyledRadio as Radio };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}