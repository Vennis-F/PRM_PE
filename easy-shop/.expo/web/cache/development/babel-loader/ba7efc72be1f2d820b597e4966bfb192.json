{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport tween from \"./tweener\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nvar deviceScreen = Dimensions.get('window');\nvar DOUBLE_TAP_INTERVAL = 500;\nvar TAP_DURATION = 250;\nvar propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles'];\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n  var _super = _createSuper(Drawer);\n  function Drawer() {\n    var _this;\n    _classCallCheck(this, Drawer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._length = 0;\n    _this._prevLength = 0;\n    _this._offsetOpen = 0;\n    _this._offsetClosed = 0;\n    _this._open = false;\n    _this._panning = false;\n    _this._tweenPending = false;\n    _this._activeTween = null;\n    _this._lastPress = 0;\n    _this._panStartTime = 0;\n    _this._syncAfterUpdate = false;\n    _this._interactionHandle = null;\n    _this.state = {\n      viewport: deviceScreen\n    };\n    _this.getChildContext = function () {\n      return {\n        drawer: _assertThisInitialized(_this)\n      };\n    };\n    _this.initialize = function (props) {\n      var fullLength = _this.getDeviceLength();\n      _this._offsetClosed = _this.getClosedOffset(props, _this.state.viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, _this.state.viewport);\n      _this._prevLength = _this._length;\n      var styles = {\n        container: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      };\n      styles.main = Object.assign({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.main);\n      styles.drawer = Object.assign({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.drawer);\n      if (props.initializeOpen || props.open) {\n        _this._open = true;\n        _this._length = fullLength - _this._offsetOpen;\n        styles.main[_this.props.side] = 0;\n        styles.drawer[_this.props.side] = 0;\n        if (props.type === 'static') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n        if (props.type === 'displace') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n      } else {\n        _this._open = false;\n        _this._length = _this._offsetClosed;\n        styles.main[_this.props.side] = _this._offsetClosed;\n        if (props.type === 'static') styles.drawer[_this.props.side] = 0;\n        if (props.type === 'overlay') styles.drawer[_this.props.side] = _this._offsetClosed + _this._offsetOpen - fullLength;\n        if (props.type === 'displace') styles.drawer[_this.props.side] = -fullLength + _this._offsetClosed + _this._offsetOpen;\n      }\n      if (_this.main) {\n        _this.drawer.setNativeProps({\n          style: {\n            left: styles.drawer.left\n          }\n        });\n        _this.main.setNativeProps({\n          style: {\n            left: styles.main.left\n          }\n        });\n      } else {\n        _this.stylesheet = StyleSheet.create(styles);\n        _this.responder = PanResponder.create({\n          onStartShouldSetPanResponder: _this.onStartShouldSetPanResponder,\n          onStartShouldSetPanResponderCapture: _this.onStartShouldSetPanResponderCapture,\n          onMoveShouldSetPanResponder: _this.onMoveShouldSetPanResponder,\n          onMoveShouldSetPanResponderCapture: _this.onMoveShouldSetPanResponderCapture,\n          onPanResponderMove: _this.onPanResponderMove,\n          onPanResponderRelease: _this.onPanResponderRelease,\n          onPanResponderTerminate: _this.onPanResponderTerminate\n        });\n      }\n      _this.resync(null, props);\n    };\n    _this.updatePosition = function () {\n      var mainProps = {};\n      var drawerProps = {};\n      var ratio = (_this._length - _this._offsetClosed) / (_this.getOpenLength() - _this._offsetClosed);\n      switch (_this.props.type) {\n        case 'overlay':\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._offsetOpen + _this._length;\n          mainProps[_this.props.side] = _this._offsetClosed;\n          break;\n        case 'static':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = 0;\n          break;\n        case 'displace':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._length + _this._offsetOpen;\n          break;\n      }\n      var mainOverlayProps = null;\n      var drawerOverlayProps = null;\n      if (_this.props.tweenHandler) {\n        var propsFrag = _this.props.tweenHandler(ratio, _this.props.side);\n        mainProps = Object.assign(mainProps, propsFrag.main);\n        drawerProps = Object.assign(drawerProps, propsFrag.drawer);\n        mainOverlayProps = propsFrag.mainOverlay;\n        drawerOverlayProps = propsFrag.drawerOverlay;\n      }\n      if (_this.main && _this.drawer && _this.mainOverlay && _this.drawerOverlay) {\n        _this.drawer.setNativeProps({\n          style: drawerProps\n        });\n        _this.main.setNativeProps({\n          style: mainProps\n        });\n        if (mainOverlayProps) _this.mainOverlay.setNativeProps({\n          style: mainOverlayProps\n        });\n        if (drawerOverlayProps) _this.drawerOverlay.setNativeProps({\n          style: drawerOverlayProps\n        });\n      }\n    };\n    _this.onPanResponderTerminate = function (e, gestureState) {\n      _this._panning = false;\n      _this.shouldOpenDrawer(_this.getGestureDelta(gestureState)) ? _this.open() : _this.close();\n    };\n    _this.onStartShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onStartShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onMoveShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onMoveShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onPanResponderMove = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n      if (!_this.props.acceptPan) return false;\n      if (_this._open ^ delta < 0 ^ _this.isRightOrBottomSide()) return false;\n      delta = _this.isRightOrBottomSide() ? delta * -1 : delta;\n      var length = _this._prevLength + delta;\n      length = Math.min(length, _this.getOpenLength());\n      length = Math.max(length, _this.getClosedLength());\n      length = Math.round(length * 2) / 2;\n      _this._length = length;\n      _this.updatePosition();\n      if (!_this._panning) {\n        _this.props.onDragStart && _this.props.onDragStart();\n      }\n      _this._panning = true;\n    };\n    _this.onPanResponderRelease = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n      _this._panning = false;\n      if (Date.now() - _this._panStartTime < TAP_DURATION) _this.processTapGestures();\n      if (Math.abs(delta) < 50 && _this._activeTween) return;\n      _this.shouldOpenDrawer(delta) ? _this.open() : _this.close();\n      _this.updatePosition();\n      _this._prevLength = _this._length;\n    };\n    _this.processShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n      if (!inMask) return false;\n      if (!_this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false;\n      _this._panStartTime = Date.now();\n      if (inMask && _this.shouldCaptureGestures()) return true;\n      if (_this.props.negotiatePan) return false;\n      if (!_this.props.acceptPan) return false;\n      _this.terminateActiveTween();\n      return true;\n    };\n    _this.processMoveShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n      if (!inMask && (!_this.props.acceptPanOnDrawer || _this._open === false)) return false;\n      if (!_this.props.acceptPan) return false;\n      if (!_this.props.negotiatePan || _this.props.disabled || !_this.props.acceptPan || _this._panning) return false;\n      var delta = _this.getGestureDelta(gestureState);\n      var deltaOppositeAxis = _this.getGestureDeltaOppositeAxis(gestureState);\n      var swipeToLeftOrTop = delta < 0 ? true : false;\n      var swipeToRightOrBottom = delta > 0 ? true : false;\n      var swipeOppositeAxis = Math.abs(deltaOppositeAxis) >= Math.abs(delta) ? true : false;\n      var swipeInCloseDirection = _this.isLeftOrTopSide() ? swipeToLeftOrTop : swipeToRightOrBottom;\n      if (swipeOppositeAxis || _this._open && !swipeInCloseDirection || !_this._open && swipeInCloseDirection) {\n        return false;\n      }\n      _this.terminateActiveTween();\n      return true;\n    };\n    _this.processTapGestures = function () {\n      if (_this._activeTween) return false;\n      if (_this.props.acceptTap || _this.props.tapToClose && _this._open) {\n        _this._open ? _this.close() : _this.open();\n        return true;\n      }\n      if (_this.props.acceptDoubleTap) {\n        var now = new Date().getTime();\n        var timeDelta = now - _this._lastPress;\n        _this._lastPress = now;\n        if (timeDelta < DOUBLE_TAP_INTERVAL) {\n          _this._open ? _this.close() : _this.open();\n          return true;\n        }\n      }\n      return false;\n    };\n    _this.testPanResponderMask = function (e, gestureState) {\n      if (_this.props.disabled) return false;\n      if (_this.context.drawer && _this.context.drawer._open) return false;\n      if (_this._childDrawer && _this._childDrawer._open) return false;\n      var pos0 = _this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY;\n      var deltaOpen = _this.isLeftOrTopSide() ? _this.getDeviceLength() - pos0 : pos0;\n      var deltaClose = _this.isLeftOrTopSide() ? pos0 : _this.getDeviceLength() - pos0;\n      if (_this._open && deltaOpen > _this.getOpenMask()) return false;\n      if (!_this._open && deltaClose > _this.getClosedMask()) return false;\n      return true;\n    };\n    _this.terminateActiveTween = function () {\n      if (_this._activeTween) {\n        _this._activeTween.terminate();\n        _this._activeTween = null;\n      }\n    };\n    _this.open = function (type, cb) {\n      var start = _this._length;\n      var end = _this.getOpenLength();\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === true) return;\n      _this.props.onOpenStart && _this.props.onOpenStart();\n      _this.setInteractionHandle();\n      _this._activeTween = tween({\n        start: _this._length,\n        end: _this.getOpenLength(),\n        duration: _this.props.tweenDuration,\n        easingType: _this.props.tweenEasing,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = true;\n          _this._prevLength = _this._length;\n          _this.adjustForCaptureGestures();\n          _this.props.onOpen();\n          _this.clearInteractionHandle();\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n    _this.close = function (type, cb) {\n      var start = _this._length;\n      var end = _this.getClosedLength();\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === false) return;\n      _this.props.onCloseStart && _this.props.onCloseStart();\n      _this.setInteractionHandle();\n      _this._activeTween = tween({\n        start: start,\n        end: end,\n        easingType: _this.props.tweenEasing,\n        duration: _this.props.tweenDuration,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = false;\n          _this._prevLength = _this._length;\n          _this.adjustForCaptureGestures();\n          _this.props.onClose();\n          _this.clearInteractionHandle();\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n    _this.toggle = function () {\n      _this._open ? _this.close() : _this.open();\n    };\n    _this.handleSetViewport = function (e) {\n      var viewport = e.nativeEvent.layout;\n      var oldViewport = _this.state.viewport;\n      if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return;\n      var didRotationChange = viewport.width !== oldViewport.width;\n      _this.resync(viewport, null, didRotationChange);\n    };\n    _this.resync = function (viewport, props, didRotationChange) {\n      if (didRotationChange) _this._syncAfterUpdate = true;\n      viewport = viewport || _this.state.viewport;\n      props = props || _this.props;\n      _this._offsetClosed = _this.getClosedOffset(props, viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, viewport);\n      _this.setState({\n        viewport: viewport\n      });\n    };\n    _this.requiresResync = function (nextProps) {\n      for (var i = 0; i < propsWhomRequireUpdate.length; i++) {\n        var key = propsWhomRequireUpdate[i];\n        if (_this.props[key] !== nextProps[key]) return true;\n      }\n    };\n    _this.getDeviceLength = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width : viewport.height;\n    };\n    _this.getOpenLength = function () {\n      return _this.getDeviceLength() - _this._offsetOpen;\n    };\n    _this.getClosedLength = function () {\n      return _this._offsetClosed;\n    };\n    _this.getMainWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetClosed : viewport.width;\n    };\n    _this.getMainHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetClosed : viewport.height;\n    };\n    _this.getDrawerWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetOpen : viewport.width;\n    };\n    _this.getDrawerHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetOpen : viewport.height;\n    };\n    _this.getOpenMask = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      if (_this.props.panCloseMask && _this.props.panCloseMask % 1 === 0) return _this.props.panCloseMask;\n      if (_this.props.panCloseMask) return _this.getDeviceLength(viewport) * _this.props.panCloseMask;\n      return Math.max(0.05, _this._offsetOpen);\n    };\n    _this.getClosedMask = function () {\n      if (_this.props.panOpenMask && _this.props.panOpenMask % 1 === 0) return _this.props.panOpenMask;\n      if (_this.props.panOpenMask) return _this.getDeviceLength() * _this.props.panOpenMask;\n      return Math.max(0.05, _this._offsetClosed);\n    };\n    _this.getOpenOffset = function (props, viewport) {\n      if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport);\n      return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * _this.getDeviceLength(viewport);\n    };\n    _this.getClosedOffset = function (props, viewport) {\n      if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport);\n      return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * _this.getDeviceLength(viewport);\n    };\n    _this.getGestureDelta = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n    };\n    _this.getGestureDeltaOppositeAxis = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n    };\n    _this.isLeftOrRightSide = function () {\n      if (I18nManager.isRTL) {\n        return [\"right\", \"left\"].includes(_this.props.side);\n      } else {\n        return [\"left\", \"right\"].includes(_this.props.side);\n      }\n    };\n    _this.isTopOrBottomSide = function () {\n      return [\"top\", \"bottom\"].includes(_this.props.side);\n    };\n    _this.isLeftOrTopSide = function () {\n      var side = \"left\";\n      if (I18nManager.isRTL) {\n        side = \"right\";\n      }\n      return [side, \"top\"].includes(_this.props.side);\n    };\n    _this.isRightOrBottomSide = function () {\n      var side = \"right\";\n      if (I18nManager.isRTL) {\n        side = \"left\";\n      }\n      return [side, \"bottom\"].includes(_this.props.side);\n    };\n    return _this;\n  }\n  _createClass(Drawer, [{\n    key: \"_registerChildDrawer\",\n    value: function _registerChildDrawer(drawer) {\n      this._childDrawer = drawer;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.context.drawer) this.context.drawer._registerChildDrawer(this);\n      if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.');\n      if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.');\n      if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.');\n      this.initialize(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.requiresResync(nextProps)) this.resync(null, nextProps);\n      if (nextProps.open !== null && this._open !== nextProps.open) {\n        this._syncAfterUpdate = true;\n        this._open = nextProps.open;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._syncAfterUpdate) {\n        this._syncAfterUpdate = false;\n        this._open ? this.open('force') : this.close('force');\n      }\n    }\n  }, {\n    key: \"shouldOpenDrawer\",\n    value: function shouldOpenDrawer(delta) {\n      var hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide();\n      if (!hasActiveHeading) return this._open;else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold;\n    }\n  }, {\n    key: \"shouldCaptureGestures\",\n    value: function shouldCaptureGestures() {\n      if (this.props.captureGestures === true) return true;\n      if (this.props.captureGestures === 'closed' && this._open === false) return true;\n      if (this.props.captureGestures === 'open' && this._open === true) return true;\n      return false;\n    }\n  }, {\n    key: \"adjustForCaptureGestures\",\n    value: function adjustForCaptureGestures() {\n      if (!this.props.captureGestures) return;\n      var shouldCapture = this.shouldCaptureGestures();\n      if (this.mainOverlay && this.drawerOverlay) {\n        this.mainOverlay.setNativeProps({\n          pointerEvents: shouldCapture && this._open ? 'auto' : 'none'\n        });\n        this.drawerOverlay.setNativeProps({\n          pointerEvents: shouldCapture && !this._open ? 'auto' : 'none'\n        });\n      }\n    }\n  }, {\n    key: \"setInteractionHandle\",\n    value: function setInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n      if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  }, {\n    key: \"clearInteractionHandle\",\n    value: function clearInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer();\n      var second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain();\n      return _jsxs(View, {\n        onLayout: this.handleSetViewport,\n        style: this.stylesheet.container,\n        children: [first, second]\n      }, \"drawerContainer\");\n    }\n  }, {\n    key: \"renderMain\",\n    value: function renderMain() {\n      var _this2 = this;\n      return _createElement(View, _objectSpread(_objectSpread({}, this.responder.panHandlers), {}, {\n        key: \"main\",\n        ref: function ref(c) {\n          return _this2.main = c;\n        },\n        style: [this.stylesheet.main, {\n          height: this.getMainHeight(),\n          width: this.getMainWidth()\n        }]\n      }), this.props.children, _jsx(View, {\n        pointerEvents: this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this2.mainOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.mainOverlay]\n      }));\n    }\n  }, {\n    key: \"renderDrawer\",\n    value: function renderDrawer() {\n      var _this3 = this;\n      return _createElement(View, _objectSpread(_objectSpread({}, this.responder.panHandlers), {}, {\n        key: \"drawer\",\n        ref: function ref(c) {\n          return _this3.drawer = c;\n        },\n        elevation: this.props.elevation,\n        style: [this.stylesheet.drawer, {\n          height: this.getDrawerHeight(),\n          width: this.getDrawerWidth()\n        }]\n      }), this.props.content, _jsx(View, {\n        pointerEvents: !this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this3.drawerOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.drawerOverlay]\n      }));\n    }\n  }]);\n  return Drawer;\n}(Component);\nDrawer.tweenPresets = {\n  parallax: function parallax(ratio) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left';\n    var drawer = _defineProperty({}, side, -150 * (1 - ratio));\n    return {\n      drawer: drawer\n    };\n  }\n};\nDrawer.propTypes = {\n  acceptDoubleTap: PropTypes.bool,\n  acceptPan: PropTypes.bool,\n  acceptTap: PropTypes.bool,\n  acceptPanOnDrawer: PropTypes.bool,\n  captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n  children: PropTypes.node,\n  closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  content: PropTypes.node,\n  disabled: PropTypes.bool,\n  elevation: PropTypes.number,\n  initializeOpen: PropTypes.bool,\n  open: PropTypes.bool,\n  negotiatePan: PropTypes.bool,\n  onClose: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onOpen: PropTypes.func,\n  onOpenStart: PropTypes.func,\n  onDragStart: PropTypes.func,\n  openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  panThreshold: PropTypes.number,\n  panCloseMask: PropTypes.number,\n  panOpenMask: PropTypes.number,\n  side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  styles: PropTypes.object,\n  tapToClose: PropTypes.bool,\n  tweenDuration: PropTypes.number,\n  tweenEasing: PropTypes.string,\n  tweenHandler: PropTypes.func,\n  type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n  useInteractionManager: PropTypes.bool,\n  panStartCompensation: PropTypes.bool,\n  openDrawerThreshold: PropTypes.any\n};\nDrawer.defaultProps = {\n  open: null,\n  initializeOpen: false,\n  type: 'displace',\n  closedDrawerOffset: 0,\n  openDrawerOffset: 0,\n  panThreshold: 0.25,\n  panOpenMask: null,\n  panCloseMask: null,\n  tweenHandler: null,\n  tweenDuration: 250,\n  tweenEasing: 'linear',\n  disabled: false,\n  negotiatePan: false,\n  captureGestures: 'open',\n  acceptDoubleTap: false,\n  acceptTap: false,\n  acceptPan: true,\n  acceptPanOnDrawer: true,\n  tapToClose: false,\n  styles: {},\n  elevation: 0,\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  side: 'left',\n  useInteractionManager: false\n};\nDrawer.contextTypes = {\n  drawer: PropTypes.object\n};\nDrawer.childContextTypes = {\n  drawer: PropTypes.object\n};\nexport { Drawer as default };\nvar styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","PanResponder","View","StyleSheet","Dimensions","InteractionManager","I18nManager","tween","jsxs","_jsxs","jsx","_jsx","createElement","_createElement","deviceScreen","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","_assertThisInitialized","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","Object","assign","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","create","responder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","Math","min","max","getClosedLength","round","onDragStart","Date","now","processTapGestures","abs","inMask","testPanResponderMask","dy","dx","terminateActiveTween","acceptPanOnDrawer","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","undefined","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","isRTL","includes","_createClass","value","_registerChildDrawer","componentWillMount","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","componentWillReceiveProps","componentDidUpdate","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","useInteractionManager","createInteractionHandle","render","first","renderMain","renderDrawer","second","onLayout","children","_this2","_objectSpread","panHandlers","ref","c","overlay","_this3","elevation","content","tweenPresets","parallax","_defineProperty","propTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","default","right","bottom","backgroundColor"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-drawer/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\n\nimport tween from './tweener'\n\nlet deviceScreen = Dimensions.get('window')\nconst DOUBLE_TAP_INTERVAL = 500\nconst TAP_DURATION = 250\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\n\nexport default class Drawer extends Component {\n\n  _length = 0;\n  _prevLength = 0;\n  _offsetOpen = 0;\n  _offsetClosed = 0;\n  _open = false;\n  _panning = false;\n  _tweenPending = false;\n  _activeTween = null;\n  _lastPress = 0;\n  _panStartTime = 0;\n  _syncAfterUpdate = false;\n  _interactionHandle = null;\n\n  static tweenPresets = {\n    parallax: (ratio, side = 'left') => {\n      let drawer = { [side] : -150 * (1 - ratio)}\n      return { drawer }\n    }\n  };\n\n  state = {\n    viewport: deviceScreen\n  };\n\n  static propTypes = {\n    acceptDoubleTap: PropTypes.bool,\n    acceptPan: PropTypes.bool,\n    acceptTap: PropTypes.bool,\n    acceptPanOnDrawer: PropTypes.bool,\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n    children: PropTypes.node,\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    content: PropTypes.node,\n    disabled: PropTypes.bool,\n    elevation: PropTypes.number,\n    initializeOpen: PropTypes.bool,\n    open: PropTypes.bool,\n    negotiatePan: PropTypes.bool,\n    onClose: PropTypes.func,\n    onCloseStart: PropTypes.func,\n    onOpen: PropTypes.func,\n    onOpenStart: PropTypes.func,\n    onDragStart: PropTypes.func,\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    panThreshold: PropTypes.number,\n    panCloseMask: PropTypes.number,\n    panOpenMask: PropTypes.number,\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n    styles: PropTypes.object,\n    tapToClose: PropTypes.bool,\n    tweenDuration: PropTypes.number,\n    tweenEasing: PropTypes.string,\n    tweenHandler: PropTypes.func,\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n    useInteractionManager: PropTypes.bool,\n\n    // deprecated\n    panStartCompensation: PropTypes.bool,\n    openDrawerThreshold: PropTypes.any,\n  };\n\n  static defaultProps = {\n    open: null,\n    initializeOpen: false,\n\n    type: 'displace',\n    closedDrawerOffset: 0,\n    openDrawerOffset: 0,\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\n    panOpenMask: null, // defaults to closedDrawerOffset\n    panCloseMask: null, // defaults to openDrawerOffset\n\n    tweenHandler: null,\n    tweenDuration: 250,\n    tweenEasing: 'linear',\n\n    disabled: false,\n    negotiatePan: false,\n    captureGestures: 'open',\n    acceptDoubleTap: false,\n    acceptTap: false,\n    acceptPan: true,\n    acceptPanOnDrawer: true,\n    tapToClose: false,\n\n    styles: {},\n    elevation: 0,\n    onOpen: () => {},\n    onClose: () => {},\n    side: 'left',\n\n    useInteractionManager: false,\n  };\n\n  /*** CONTEXT ***/\n  static contextTypes = { drawer: PropTypes.object };\n  static childContextTypes = { drawer: PropTypes.object };\n  getChildContext = () => ({ drawer: this });\n  /*** END CONTEXT ***/\n\n  _registerChildDrawer(drawer) {\n    // Store child drawer for gesture disambiguation with multi drawer\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    this._childDrawer = drawer\n  }\n\n  componentWillMount() {\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\n    this.initialize(this.props)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\n\n    if (nextProps.open !== null && this._open !== nextProps.open) {\n      this._syncAfterUpdate = true\n      this._open = nextProps.open\n    }\n  }\n\n  componentDidUpdate() {\n    if (this._syncAfterUpdate) {\n      this._syncAfterUpdate = false\n      this._open ? this.open('force') : this.close('force')\n    }\n  }\n\n  initialize = (props) => {\n    let fullLength = this.getDeviceLength();\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\n    // add function options\n    this._prevLength = this._length\n\n    let styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }\n\n    styles.main = Object.assign({\n      position: 'absolute',\n      borderWidth: 0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\n\n    styles.drawer = Object.assign({\n      position: 'absolute',\n      borderWidth:0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\n\n    if (props.initializeOpen || props.open) { // open\n      this._open = true\n      this._length = fullLength - this._offsetOpen\n      styles.main[this.props.side] = 0\n      styles.drawer[this.props.side] = 0\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\n    } else { // closed\n      this._open = false\n      this._length = this._offsetClosed\n      styles.main[this.props.side] = this._offsetClosed\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\n    }\n\n    if (this.main) {\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\n      this.main.setNativeProps({ style: {left: styles.main.left}})\n    } else {\n      this.stylesheet = StyleSheet.create(styles)\n      this.responder = PanResponder.create({\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\n        onPanResponderMove: this.onPanResponderMove,\n        onPanResponderRelease: this.onPanResponderRelease,\n\tonPanResponderTerminate: this.onPanResponderTerminate\n      })\n    }\n\n    this.resync(null, props)\n  };\n\n  updatePosition = () => {\n    let mainProps = {}\n    let drawerProps = {}\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\n\n    switch (this.props.type) {\n      case 'overlay':\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\n        mainProps[this.props.side] = this._offsetClosed\n        break\n      case 'static':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = 0\n        break\n      case 'displace':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\n        break\n    }\n\n    let mainOverlayProps = null\n    let drawerOverlayProps = null\n    if (this.props.tweenHandler) {\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\n      mainProps = Object.assign(mainProps, propsFrag.main)\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\n      mainOverlayProps = propsFrag.mainOverlay\n      drawerOverlayProps = propsFrag.drawerOverlay\n    }\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\n      this.drawer.setNativeProps({style: drawerProps})\n      this.main.setNativeProps({style: mainProps})\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\n    }\n  };\n\n  shouldOpenDrawer(delta) {\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\n    if (!hasActiveHeading) return this._open\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\n  }\n\n  onPanResponderTerminate = (e, gestureState) => {\n    this._panning = false\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\n  };\n\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onStartShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onPanResponderMove = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    if (!this.props.acceptPan) return false\n\n    //Do nothing if we are panning the wrong way\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\n\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\n    let length = this._prevLength + delta\n    length = Math.min(length, this.getOpenLength())\n    length = Math.max(length, this.getClosedLength())\n    length = Math.round(length*2)/2\n    this._length = length\n\n    this.updatePosition()\n    if (!this._panning) {\n      this.props.onDragStart && this.props.onDragStart();\n    }\n    this._panning = true\n  };\n\n  onPanResponderRelease = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    this._panning = false\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\n    if (Math.abs(delta) < 50 && this._activeTween) return\n\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\n    this.updatePosition()\n    this._prevLength = this._length\n  };\n\n  processShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask) return false\n    // skip gesture process if we have mostly vertical swipe\n    if (!this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false\n    this._panStartTime = Date.now()\n    if (inMask && this.shouldCaptureGestures()) return true\n    if (this.props.negotiatePan) return false\n    if (!this.props.acceptPan) return false\n    this.terminateActiveTween()\n    return true\n  };\n\n  processMoveShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask && (!this.props.acceptPanOnDrawer || this._open === false )) return false\n    if (!this.props.acceptPan) return false\n\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\n    let delta = this.getGestureDelta(gestureState)\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\n    let swipeToLeftOrTop = (delta < 0) ? true : false\n    let swipeToRightOrBottom = (delta > 0) ? true : false\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\n      return false\n    }\n\n    this.terminateActiveTween()\n    return true\n  };\n\n  processTapGestures = () => {\n    if (this._activeTween) return false // disable tap gestures during tween\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\n      this._open ? this.close() : this.open()\n      return true\n    }\n    if (this.props.acceptDoubleTap) {\n      let now = new Date().getTime()\n      let timeDelta = now - this._lastPress\n      this._lastPress = now\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\n        this._open ? this.close() : this.open()\n        return true\n      }\n    }\n    return false\n  };\n\n  shouldCaptureGestures() {\n    if (this.props.captureGestures === true) return true\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\n    if (this.props.captureGestures === 'open' && this._open === true) return true\n    return false\n  }\n\n  testPanResponderMask = (e, gestureState) => {\n    if (this.props.disabled) return false\n\n    // Disable if parent or child drawer exist and are open\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    if (this.context.drawer && this.context.drawer._open) return false\n    if (this._childDrawer && this._childDrawer._open) return false\n\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\n\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\n    return true\n  };\n\n  terminateActiveTween = () => {\n    if (this._activeTween) {\n      this._activeTween.terminate()\n      this._activeTween = null\n    }\n  };\n\n  open = (type, cb) => {\n    let start = this._length\n    let end = this.getOpenLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\n\n    this.props.onOpenStart && this.props.onOpenStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start: this._length,\n      end: this.getOpenLength(),\n      duration: this.props.tweenDuration,\n      easingType: this.props.tweenEasing,\n      onFrame: (tweenValue) => {\n\tthis._length = Math.round(tweenValue*2)/2;\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = true\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onOpen()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  close = (type, cb) => {\n    let start = this._length\n    let end = this.getClosedLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\n\n    this.props.onCloseStart && this.props.onCloseStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start,\n      end,\n      easingType: this.props.tweenEasing,\n      duration: this.props.tweenDuration,\n      onFrame: (tweenValue) => {\n\tthis._length = Math.round(tweenValue*2)/2;\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = false\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onClose()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  adjustForCaptureGestures() {\n    if (!this.props.captureGestures) return\n    let shouldCapture = this.shouldCaptureGestures()\n    if (this.mainOverlay && this.drawerOverlay) {\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\n    }\n  }\n\n  setInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\n  }\n\n  clearInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n  }\n\n  toggle = () => {\n    this._open ? this.close() : this.open()\n  };\n\n  handleSetViewport = (e) => {\n    let viewport = e.nativeEvent.layout\n    let oldViewport = this.state.viewport\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\n    let didRotationChange = viewport.width !== oldViewport.width\n    this.resync(viewport, null, didRotationChange)\n  };\n\n  resync = (viewport, props, didRotationChange) => {\n    if (didRotationChange) this._syncAfterUpdate = true\n    viewport = viewport || this.state.viewport\n    props = props || this.props\n    this._offsetClosed = this.getClosedOffset(props, viewport)\n    this._offsetOpen = this.getOpenOffset(props, viewport)\n    this.setState({ viewport })\n  };\n\n  requiresResync = (nextProps) => {\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\n      let key = propsWhomRequireUpdate[i]\n      if (this.props[key] !== nextProps[key]) return true\n    }\n  };\n\n  /*** DYNAMIC GETTERS ***/\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\n  getClosedLength = () => this._offsetClosed;\n  getMainWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\n  };\n  getMainHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\n  };\n  getDrawerWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\n  };\n  getDrawerHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\n  };\n  getOpenMask = (viewport = this.state.viewport) => {\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\n    return Math.max(0.05, this._offsetOpen)\n  };\n  getClosedMask = () => {\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\n    return Math.max(0.05, this._offsetClosed)\n  };\n  getOpenOffset = (props, viewport) => {\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getClosedOffset = (props, viewport) => {\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n  /*** END DYNAMIC GETTERS ***/\n\n  isLeftOrRightSide = () => {\n    if (I18nManager.isRTL) {\n      return [\"right\", \"left\"].includes(this.props.side)\n    } else {\n      return [\"left\", \"right\"].includes(this.props.side)\n    }\n  }\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\n  isLeftOrTopSide = () => {\n    let side = \"left\";\n    if (I18nManager.isRTL) {\n      side = \"right\";\n    }\n    return [side, \"top\"].includes(this.props.side);\n  }\n  isRightOrBottomSide = () => {\n    let side = \"right\"\n    if (I18nManager.isRTL) {\n      side = \"left\"\n    }\n    return [side, \"bottom\"].includes(this.props.side);\n  }\n\n  render() {\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\n\n    return (\n      <View\n        key=\"drawerContainer\"\n        onLayout={this.handleSetViewport}\n        style={this.stylesheet.container}\n        >\n        {first}\n        {second}\n      </View>\n    )\n  }\n\n  renderMain() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"main\"\n        ref={c => this.main = c}\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\n        >\n        {this.props.children}\n        <View\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.mainOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\n          />\n      </View>\n    )\n  }\n\n  renderDrawer() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"drawer\"\n        ref={c => this.drawer = c}\n        elevation={this.props.elevation}\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\n        >\n        {this.props.content}\n        <View\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.drawerOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\n          />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}