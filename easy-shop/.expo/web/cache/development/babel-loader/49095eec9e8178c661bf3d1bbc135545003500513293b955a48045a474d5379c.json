{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Content = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/Content.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeKeyboardAwareScrollView = require('@codler/react-native-keyboard-aware-scroll-view');\nvar _platform = require(\"../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _getStyle = require(\"../utils/getStyle\");\nvar _getStyle2 = _interopRequireDefault(_getStyle);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n  function Content() {\n    _classCallCheck(this, Content);\n    return _possibleConstructorReturn(this, (Content.__proto__ || Object.getPrototypeOf(Content)).apply(this, arguments));\n  }\n  _createClass(Content, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var _props = this.props,\n        children = _props.children,\n        contentContainerStyle = _props.contentContainerStyle,\n        disableKBDismissScroll = _props.disableKBDismissScroll,\n        keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps,\n        padder = _props.padder,\n        style = _props.style;\n      var containerStyle = {\n        flex: 1,\n        backgroundColor: (0, _getStyle2.default)(style).backgroundColor\n      };\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.SafeAreaView, {\n        style: containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps || 'handled',\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        contentContainerStyle: [{\n          padding: padder ? variables.contentPadding : undefined\n        }, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), children));\n    }\n  }]);\n  return Content;\n}(_react.Component);\nContent.contextTypes = {\n  theme: _propTypes2.default.object\n};\nContent.propTypes = {\n  disableKBDismissScroll: _propTypes2.default.bool,\n  keyboardShouldPersistTaps: _propTypes2.default.string,\n  padder: _propTypes2.default.bool,\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array])\n};\nvar StyledContent = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Content', {}, _mapPropsToStyleNames2.default)(Content);\nexports.Content = StyledContent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AACA;;AACA;AACA;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,O;;;;;;;;6BAKK;MAAA;MAAA,aAQH,KAAKC,KARF;QAELC,QAFK,UAELA,QAFK;QAGLC,qBAHK,UAGLA,qBAHK;QAILC,sBAJK,UAILA,sBAJK;QAKLC,yBALK,UAKLA,yBALK;QAMLC,MANK,UAMLA,MANK;QAOLC,KAPK,UAOLA,KAPK;MAUP,IAAMC,iBAAiB;QACrBC,MAAM,CADe;QAErBC,iBAAiB,wBAASH,KAAT,EAAgBG;MAFZ,CAAvB;MAKA,IAAMC,YAAY,KAAKC,OAAL,CAAaC,KAAb,GACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,GAEdG,kBAFJ;MAIA,OACEC,8BAACC,yBAAD;QAAcT,OAAOC,cAArB;QAAAS;UAAAC;UAAAC;QAAA;MAAA,GACEJ,8BAACK,2DAAD;QACEC,kCAAkC,KADpC;QAEEC,qBAAqBlB,yBAAyB,IAAzB,GAAgC;UAAEmB,GAAG,CAAL;UAAQC,GAAG;QAAX,CAFvD;QAGEnB,2BAA2BA,6BAA6B,SAH1D;QAIEoB,KAAK,gBAAK;UACRC,OAAKC,WAAL,GAAmBC,CAAnB;UACAF,OAAKG,KAAL,GAAaD,CAAb;QACD;MAPH,GAQM,KAAK3B,KARX;QASEE,uBAAuB,CACrB;UAAE2B,SAASxB,SAASK,UAAUoB,cAAnB,GAAoCC;QAA/C,CADqB,EAErB7B,qBAFqB,CATzB;QAAAc;UAAAC;UAAAC;QAAA;MAAA,IAcGjB,QAdH,CADF,CADF;IAoBD;;;EA5CmB+B,gB;AAAhBjC,O,CACGkC,Y,GAAe;EACpBrB,OAAOsB,oBAAUC;AADG,C;AA8CxBpC,QAAQqC,SAAR,GAAoB;EAClBjC,wBAAwB+B,oBAAUG,IADhB;EAElBjC,2BAA2B8B,oBAAUI,MAFnB;EAGlBjC,QAAQ6B,oBAAUG,IAHA;EAIlB/B,OAAO4B,oBAAUK,SAAV,CAAoB,CACzBL,oBAAUC,MADe,EAEzBD,oBAAUM,MAFe,EAGzBN,oBAAUO,KAHe,CAApB;AAJW,CAApB;AAWA,IAAMC,gBAAgB,0CACpB,oBADoB,EAEpB,EAFoB,EAGpBC,8BAHoB,EAIpB5C,OAJoB,CAAtB;QAM0BA,O,GAAjB2C,a","names":["Content","props","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","backgroundColor","variables","context","theme","variable","_react2","_reactNative","__source","fileName","lineNumber","_reactNativeKeyboardAwareScrollView","automaticallyAdjustContentInsets","resetScrollToCoords","x","y","ref","_this2","_scrollview","c","_root","padding","contentPadding","undefined","Component","contextTypes","PropTypes","object","propTypes","bool","string","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\Content.js"],"sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}