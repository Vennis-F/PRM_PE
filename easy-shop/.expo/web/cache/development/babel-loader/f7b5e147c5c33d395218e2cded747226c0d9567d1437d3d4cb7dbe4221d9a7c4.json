{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Hammer from '@egjs/hammerjs';\nimport State from \"../State\";\nimport { CONTENT_TOUCHES_DELAY, CONTENT_TOUCHES_QUICK_TAP_END_DELAY } from \"./constants\";\nimport DiscreteGestureHandler from \"./DiscreteGestureHandler\";\nimport { fireAfterInterval, isValidNumber, isnan } from \"./utils\";\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  _inherits(PressGestureHandler, _DiscreteGestureHandl);\n  var _super = _createSuper(PressGestureHandler);\n  function PressGestureHandler() {\n    var _this;\n    _classCallCheck(this, PressGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shouldDelayTouches = true;\n    return _this;\n  }\n  _createClass(PressGestureHandler, [{\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n        maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.BEGAN), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.CANCELLED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = fireAfterInterval(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (ev.isFinal && this.isGestureRunning) {\n        var timeout;\n        if (this.visualFeedbackTimer) {\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(function () {\n          _this3.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: Hammer.INPUT_END,\n            isFinal: true\n          }));\n          _this3.onGestureEnded();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n        shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n        _ref3$disallowInterru = _ref3.disallowInterruption,\n        disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n        _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n        shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n        _ref3$minDurationMs = _ref3.minDurationMs,\n        minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n        _ref3$maxDist = _ref3.maxDist,\n        maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n        _ref3$minPointers = _ref3.minPointers,\n        minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n        _ref3$maxPointers = _ref3.maxPointers,\n        maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n        props = _objectWithoutProperties(_ref3, [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"]);\n      return _get(_getPrototypeOf(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Press;\n    }\n  }]);\n  return PressGestureHandler;\n}(DiscreteGestureHandler);\nexport default PressGestureHandler;","map":{"version":3,"names":["Hammer","State","CONTENT_TOUCHES_DELAY","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","DiscreteGestureHandler","fireAfterInterval","isValidNumber","isnan","PressGestureHandler","shouldDelayTouches","inputData","hasGestureFailed","cancelEvent","shouldCancelWhenOutside","maxDistSq","type","INPUT_START","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","_hasCustomActivationCriteria","config","time","minDurationMs","ev","onGestureStart","pointerType","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","shouldDelayTouchForEvent","sendEvent","eventType","isFirst","event","isFinal","timeout","onGestureEnded","shouldActivateOnStart","disallowInterruption","Number","NaN","maxDist","minPointers","maxPointers","props","Press"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-gesture-handler/web/PressGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\r\n\r\nimport State from '../State';\r\nimport {\r\n  CONTENT_TOUCHES_DELAY,\r\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\r\n} from './constants';\r\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\r\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\r\n\r\nclass PressGestureHandler extends DiscreteGestureHandler {\r\n  get name() {\r\n    return 'press';\r\n  }\r\n\r\n  get minDurationMs() {\r\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\r\n  }\r\n\r\n  get maxDist() {\r\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\r\n  }\r\n\r\n  get NativeGestureClass() {\r\n    return Hammer.Press;\r\n  }\r\n\r\n  shouldDelayTouches = true;\r\n\r\n  simulateCancelEvent(inputData) {\r\n    // Long press never starts so we can't rely on the running event boolean.\r\n    this.hasGestureFailed = true;\r\n    this.cancelEvent(inputData);\r\n  }\r\n\r\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\r\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\r\n  }\r\n\r\n  getState(type) {\r\n    return {\r\n      [Hammer.INPUT_START]: State.BEGAN,\r\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\r\n      [Hammer.INPUT_END]: State.END,\r\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\r\n    }[type];\r\n  }\r\n\r\n  getConfig() {\r\n    if (!this._hasCustomActivationCriteria) {\r\n      // Default config\r\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\r\n      return {\r\n        shouldCancelWhenOutside: true,\r\n        maxDistSq: 10,\r\n      };\r\n    }\r\n    return this.config;\r\n  }\r\n\r\n  getHammerConfig() {\r\n    return {\r\n      ...super.getHammerConfig(),\r\n      // threshold: this.maxDist,\r\n      time: this.minDurationMs,\r\n    };\r\n  }\r\n\r\n  onGestureActivated(ev) {\r\n    this.onGestureStart(ev);\r\n  }\r\n\r\n  shouldDelayTouchForEvent({ pointerType }) {\r\n    // Don't disable event for mouse input\r\n    return this.shouldDelayTouches && pointerType === 'touch';\r\n  }\r\n\r\n  onGestureStart(ev) {\r\n    this.isGestureRunning = true;\r\n    clearTimeout(this.visualFeedbackTimer);\r\n    this.initialEvent = ev;\r\n    this.visualFeedbackTimer = fireAfterInterval(() => {\r\n      this.sendGestureStartedEvent(this.initialEvent);\r\n      this.initialEvent = null;\r\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\r\n  }\r\n\r\n  sendGestureStartedEvent(ev) {\r\n    clearTimeout(this.visualFeedbackTimer);\r\n    this.visualFeedbackTimer = null;\r\n    this.sendEvent({\r\n      ...ev,\r\n      eventType: Hammer.INPUT_MOVE,\r\n      isFirst: true,\r\n    });\r\n  }\r\n\r\n  forceInvalidate(event) {\r\n    super.forceInvalidate(event);\r\n    clearTimeout(this.visualFeedbackTimer);\r\n    this.visualFeedbackTimer = null;\r\n    this.initialEvent = null;\r\n  }\r\n\r\n  onRawEvent(ev) {\r\n    super.onRawEvent(ev);\r\n    if (ev.isFinal && this.isGestureRunning) {\r\n      let timeout;\r\n      if (this.visualFeedbackTimer) {\r\n        // Aesthetic timing for a quick tap.\r\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\r\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\r\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\r\n        this.sendGestureStartedEvent(this.initialEvent);\r\n        this.initialEvent = null;\r\n      }\r\n      fireAfterInterval(() => {\r\n        this.sendEvent({\r\n          ...ev,\r\n          eventType: Hammer.INPUT_END,\r\n          isFinal: true,\r\n        });\r\n        this.onGestureEnded();\r\n      }, timeout);\r\n    }\r\n  }\r\n\r\n  updateGestureConfig({\r\n    shouldActivateOnStart = false,\r\n    disallowInterruption = false,\r\n    shouldCancelWhenOutside = true,\r\n    minDurationMs = Number.NaN,\r\n    maxDist = Number.NaN,\r\n    minPointers = 1,\r\n    maxPointers = 1,\r\n    ...props\r\n  }) {\r\n    return super.updateGestureConfig({\r\n      shouldActivateOnStart,\r\n      disallowInterruption,\r\n      shouldCancelWhenOutside,\r\n      minDurationMs,\r\n      maxDist,\r\n      minPointers,\r\n      maxPointers,\r\n      ...props,\r\n    });\r\n  }\r\n}\r\nexport default PressGestureHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}