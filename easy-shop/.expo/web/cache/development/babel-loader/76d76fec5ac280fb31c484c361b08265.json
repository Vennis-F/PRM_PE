{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from \"native-base\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from \"react-redux\";\nimport EasyButton from \"../../../Shared/StyledComponents/EasyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar countries = require(\"../../../assets/countries.json\");\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    orderItems = _useState2[0],\n    setOrderItems = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    address = _useState4[0],\n    setAddress = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address2 = _useState6[0],\n    setAddress2 = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    city = _useState8[0],\n    setCity = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    zip = _useState10[0],\n    setZip = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    country = _useState12[0],\n    setCountry = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    phone = _useState14[0],\n    setPhone = _useState14[1];\n  var _useState15 = useState(),\n    _useState16 = _slicedToArray(_useState15, 2),\n    user = _useState16[0],\n    setUser = _useState16[1];\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.userId);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n  var checkOut = function checkOut() {\n    console.log(\"orders\", orderItems);\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Shipping Address\",\n      children: [_jsx(Input, {\n        placeholder: \"Phone\",\n        name: \"phone\",\n        value: phone,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 1\",\n        name: \"ShippingAddress1\",\n        value: address,\n        onChangeText: function onChangeText(text) {\n          return setAddress(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 2\",\n        name: \"ShippingAddress2\",\n        value: address2,\n        onChangeText: function onChangeText(text) {\n          return setAddress2(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"City\",\n        name: \"city\",\n        value: city,\n        onChangeText: function onChangeText(text) {\n          return setCity(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Zip Code\",\n        name: \"zip\",\n        value: zip,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setZip(text);\n        }\n      }), _jsx(Item, {\n        picker: true,\n        children: _jsx(Picker, {\n          mode: \"dropdown\",\n          iosIcon: _jsx(Icon, {\n            name: \"arrow-down\",\n            color: \"#007aff\"\n          }),\n          style: {\n            width: undefined\n          },\n          selectedValue: country,\n          placeholder: \"Select your country\",\n          placeholderStyle: {\n            color: \"#007aff\"\n          },\n          placeholderIconColor: \"#007aff\",\n          onValueChange: function onValueChange(e) {\n            return setCountry(e);\n          },\n          children: countries.map(function (c) {\n            return _jsx(Picker.Item, {\n              label: c.name,\n              value: c.name\n            }, c.code);\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          width: \"80%\",\n          alignItems: \"center\"\n        },\n        children: _jsx(EasyButton, {\n          large: true,\n          third: true,\n          onPress: function onPress() {\n            return checkOut();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Confirm\"\n          })\n        })\n      })]\n    })\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","useContext","Text","View","Button","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","EasyButton","jsx","_jsx","jsxs","_jsxs","countries","require","Checkout","props","context","_useState","_useState2","_slicedToArray","orderItems","setOrderItems","_useState3","_useState4","address","setAddress","_useState5","_useState6","address2","setAddress2","_useState7","_useState8","city","setCity","_useState9","_useState10","zip","setZip","_useState11","_useState12","country","setCountry","_useState13","_useState14","phone","setPhone","_useState15","_useState16","user","setUser","cartItems","stateUser","isAuthenticated","userId","navigation","navigate","show","topOffset","type","text1","text2","checkOut","console","log","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","viewIsInsideTabBar","extraHeight","enableOnAndroid","children","title","placeholder","name","value","keyboardType","onChangeText","text","picker","mode","iosIcon","color","style","width","undefined","selectedValue","placeholderStyle","placeholderIconColor","onValueChange","e","map","c","label","code","alignItems","large","third","onPress","mapStateToProps","state"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/Screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Text, View, Button } from \"react-native\";\r\nimport { Item, Picker, Toast } from \"native-base\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\r\nimport Input from \"../../../Shared/Form/Input\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport EasyButton from \"../../../Shared/StyledComponents/EasyButton\";\r\n\r\nconst countries = require(\"../../../assets/countries.json\");\r\n\r\nconst Checkout = (props) => {\r\n  const context = useContext(AuthGlobal);\r\n\r\n  const [orderItems, setOrderItems] = useState();\r\n  const [address, setAddress] = useState();\r\n  const [address2, setAddress2] = useState();\r\n  const [city, setCity] = useState();\r\n  const [zip, setZip] = useState();\r\n  const [country, setCountry] = useState();\r\n  const [phone, setPhone] = useState();\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    setOrderItems(props.cartItems);\r\n\r\n    if (context.stateUser.isAuthenticated) {\r\n      setUser(context.stateUser.user.userId);\r\n    } else {\r\n      props.navigation.navigate(\"Cart\");\r\n      Toast.show({\r\n        topOffset: 60,\r\n        type: \"error\",\r\n        text1: \"Please Login to Checkout\",\r\n        text2: \"\",\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      setOrderItems();\r\n    };\r\n  }, []);\r\n\r\n  const checkOut = () => {\r\n    console.log(\"orders\", orderItems);\r\n    let order = {\r\n      city,\r\n      country,\r\n      dateOrdered: Date.now(),\r\n      orderItems,\r\n      phone,\r\n      shippingAddress1: address,\r\n      shippingAddress2: address2,\r\n      status: \"3\",\r\n      user,\r\n      zip,\r\n    };\r\n\r\n    props.navigation.navigate(\"Payment\", { order: order });\r\n  };\r\n\r\n  return (\r\n    <KeyboardAwareScrollView\r\n      viewIsInsideTabBar={true}\r\n      extraHeight={200}\r\n      enableOnAndroid={true}\r\n    >\r\n      <FormContainer title={\"Shipping Address\"}>\r\n        <Input\r\n          placeholder={\"Phone\"}\r\n          name={\"phone\"}\r\n          value={phone}\r\n          keyboardType={\"numeric\"}\r\n          onChangeText={(text) => setPhone(text)}\r\n        />\r\n        <Input\r\n          placeholder={\"Shipping Address 1\"}\r\n          name={\"ShippingAddress1\"}\r\n          value={address}\r\n          onChangeText={(text) => setAddress(text)}\r\n        />\r\n        <Input\r\n          placeholder={\"Shipping Address 2\"}\r\n          name={\"ShippingAddress2\"}\r\n          value={address2}\r\n          onChangeText={(text) => setAddress2(text)}\r\n        />\r\n        <Input\r\n          placeholder={\"City\"}\r\n          name={\"city\"}\r\n          value={city}\r\n          onChangeText={(text) => setCity(text)}\r\n        />\r\n        <Input\r\n          placeholder={\"Zip Code\"}\r\n          name={\"zip\"}\r\n          value={zip}\r\n          keyboardType={\"numeric\"}\r\n          onChangeText={(text) => setZip(text)}\r\n        />\r\n        <Item picker>\r\n          <Picker\r\n            mode=\"dropdown\"\r\n            iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\r\n            style={{ width: undefined }}\r\n            selectedValue={country}\r\n            placeholder=\"Select your country\"\r\n            placeholderStyle={{ color: \"#007aff\" }}\r\n            placeholderIconColor=\"#007aff\"\r\n            onValueChange={(e) => setCountry(e)}\r\n          >\r\n            {countries.map((c) => {\r\n              return <Picker.Item key={c.code} label={c.name} value={c.name} />;\r\n            })}\r\n          </Picker>\r\n        </Item>\r\n        <View style={{ width: \"80%\", alignItems: \"center\" }}>\r\n          <EasyButton large third onPress={() => checkOut()}>\r\n            <Text style={{ color: \"white\" }}>Confirm</Text>\r\n          </EasyButton>\r\n        </View>\r\n      </FormContainer>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { cartItems } = state;\r\n  return {\r\n    cartItems: cartItems,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}