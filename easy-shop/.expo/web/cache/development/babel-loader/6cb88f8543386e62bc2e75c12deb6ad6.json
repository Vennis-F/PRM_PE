{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\nvar _jsxFileName = 'src/basic/Button.js';\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _platform = require(\"../theme/variables/platform\");\nvar _platform2 = _interopRequireDefault(_platform);\nvar _commonColor = require(\"../theme/variables/commonColor\");\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _Text = require(\"./Text\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar Button = function (_React$PureComponent) {\n  _inherits(Button, _React$PureComponent);\n  function Button() {\n    _classCallCheck(this, Button);\n    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));\n  }\n  _createClass(Button, [{\n    key: 'setRoot',\n    value: function setRoot(c) {\n      this._root = c;\n    }\n  }, {\n    key: 'getInitialStyle',\n    value: function getInitialStyle() {\n      return {\n        borderedBtn: {\n          borderWidth: this.props.bordered ? _platform2.default.buttonDefaultBorderWidth : undefined,\n          borderRadius: this.props.rounded && this.props.bordered ? _platform2.default.borderRadiusLarge : _platform2.default.buttonDefaultBorderRadius\n        }\n      };\n    }\n  }, {\n    key: 'prepareRootProps',\n    value: function prepareRootProps() {\n      var _props = this.props,\n        style = _props.style,\n        others = _objectWithoutProperties(_props, ['style']);\n      return _extends({\n        style: _reactNative.StyleSheet.flatten(_reactNative.StyleSheet.compose(this.getInitialStyle().borderedBtn, style))\n      }, others);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      var children = _reactNative.Platform.OS === _commonColor.PLATFORM.IOS || !variables.buttonUppercaseAndroidText ? this.props.children : _react2.default.Children.map(this.props.children, function (child) {\n        return child && child.type === _Text.Text ? _react2.default.cloneElement(child, _extends({\n          uppercase: _this2.props.buttonUppercaseAndroidText === false ? false : variables.buttonUppercaseAndroidText\n        }, child.props)) : child;\n      });\n      var rootProps = this.prepareRootProps();\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS || _reactNative.Platform.OS === _commonColor.PLATFORM.WEB || variables.androidRipple === false || _reactNative.Platform.Version < 21) {\n        return _react2.default.createElement(_reactNative.TouchableOpacity, _extends({}, rootProps, {\n          ref: this.setRoot,\n          activeOpacity: this.props.activeOpacity > 0 ? this.props.activeOpacity : _platform2.default.buttonDefaultActiveOpacity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }), children);\n      }\n      if (this.props.rounded) {\n        var buttonStyle = _extends({}, rootProps.style);\n        var buttonFlex = this.props.full || this.props.block ? _platform2.default.buttonDefaultFlex : buttonStyle.flex;\n        return _react2.default.createElement(_reactNative.View, {\n          style: [{\n            maxHeight: buttonStyle.height\n          }, buttonStyle, {\n            paddingTop: undefined,\n            paddingBottom: undefined\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          }\n        }, _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n          ref: this.setRoot,\n          background: _reactNative.TouchableNativeFeedback.Ripple(this.props.androidRippleColor || variables.androidRippleColor, true)\n        }, rootProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }), _react2.default.createElement(_reactNative.View, {\n          style: [styles.childContainer, {\n            paddingTop: buttonStyle.paddingTop,\n            paddingBottom: buttonStyle.paddingBottom,\n            height: buttonStyle.height,\n            flexGrow: buttonFlex\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          }\n        }, children)));\n      }\n      return _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        ref: this.setRoot,\n        onPress: this.props.onPress,\n        background: this.props.transparent ? _reactNative.TouchableNativeFeedback.Ripple('transparent') : _reactNative.TouchableNativeFeedback.Ripple(variables.androidRippleColor, false)\n      }, rootProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }), _react2.default.createElement(_reactNative.View, _extends({}, rootProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }), children));\n    }\n  }]);\n  return Button;\n}(_react2.default.PureComponent);\nButton.contextTypes = {\n  theme: _propTypes2.default.object\n};\nButton.propTypes = _extends({}, _reactNative.TouchableOpacity.propTypes, {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  block: _propTypes2.default.bool,\n  primary: _propTypes2.default.bool,\n  transparent: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  danger: _propTypes2.default.bool,\n  warning: _propTypes2.default.bool,\n  info: _propTypes2.default.bool,\n  bordered: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  rounded: _propTypes2.default.bool,\n  large: _propTypes2.default.bool,\n  small: _propTypes2.default.bool,\n  active: _propTypes2.default.bool\n});\nvar styles = _reactNative.StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nvar StyledButton = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Button', {}, _mapPropsToStyleNames2.default)(Button);\nexports.Button = StyledButton;","map":{"version":3,"sources":["../../../src/basic/Button.js"],"names":["Button","React","PureComponent","contextTypes","theme","PropTypes","object","c","_root","borderedBtn","borderWidth","props","bordered","variable","buttonDefaultBorderWidth","undefined","borderRadius","rounded","borderRadiusLarge","buttonDefaultBorderRadius","style","others","StyleSheet","flatten","compose","getInitialStyle","variables","context","children","Platform","OS","PLATFORM","IOS","buttonUppercaseAndroidText","Children","map","child","type","Text","cloneElement","uppercase","rootProps","prepareRootProps","WEB","androidRipple","Version","setRoot","activeOpacity","buttonDefaultActiveOpacity","buttonStyle","buttonFlex","full","block","buttonDefaultFlex","flex","maxHeight","height","paddingTop","paddingBottom","TouchableNativeFeedback","Ripple","androidRippleColor","styles","childContainer","flexGrow","onPress","transparent","propTypes","TouchableOpacity","oneOfType","number","array","bool","primary","success","danger","warning","info","disabled","large","small","active","create","flexShrink","flexDirection","justifyContent","alignItems","StyledButton","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Platform,\n  View,\n  TouchableNativeFeedback,\n  StyleSheet\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport { PLATFORM } from '../theme/variables/commonColor';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Text } from './Text';\n\n\nclass Button extends React.PureComponent {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  setRoot(c){\n    this._root = c;\n  }\n\n  getInitialStyle() {\n    return {\n      borderedBtn: {\n        borderWidth: this.props.bordered\n          ? variable.buttonDefaultBorderWidth\n          : undefined,\n        borderRadius:\n          this.props.rounded && this.props.bordered\n            ? variable.borderRadiusLarge\n            : variable.buttonDefaultBorderRadius\n      }\n    };\n  }\n\n  prepareRootProps() {\n\n    const {style, ...others} = this.props;\n\n    return {\n      style: StyleSheet.flatten(StyleSheet.compose(this.getInitialStyle().borderedBtn, style)),\n      ...others\n    }\n\n  }\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    const children =\n      Platform.OS === PLATFORM.IOS || !variables.buttonUppercaseAndroidText\n        ? this.props.children\n        : React.Children.map(this.props.children, child =>\n            child && child.type === Text\n              ? React.cloneElement(child, {\n                uppercase: this.props.buttonUppercaseAndroidText === false\n                ? false : variables.buttonUppercaseAndroidText,\n                ...child.props\n              })\n              : child\n          );\n\n    const rootProps = this.prepareRootProps();\n\n    if (\n      Platform.OS === PLATFORM.IOS ||\n      Platform.OS === PLATFORM.WEB ||\n      variables.androidRipple === false ||\n      Platform.Version < 21\n    ) {\n      return (\n        <TouchableOpacity\n          {...rootProps}\n          ref={this.setRoot}\n          activeOpacity={\n            this.props.activeOpacity > 0\n              ? this.props.activeOpacity\n              : variable.buttonDefaultActiveOpacity\n          }\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n    if (this.props.rounded) {\n      const buttonStyle = { ...rootProps.style };\n      const buttonFlex =\n        this.props.full || this.props.block\n          ? variable.buttonDefaultFlex\n          : buttonStyle.flex;\n      return (\n        <View\n          style={[\n            { maxHeight: buttonStyle.height },\n            buttonStyle,\n            { paddingTop: undefined, paddingBottom: undefined }\n          ]}\n        >\n          <TouchableNativeFeedback\n            ref={this.setRoot}\n            background={TouchableNativeFeedback.Ripple(\n              this.props.androidRippleColor || variables.androidRippleColor,\n              true\n            )}\n            {...rootProps}\n          >\n            <View\n              style={[\n                // eslint-disable-next-line no-use-before-define\n                styles.childContainer,\n                {\n                  paddingTop: buttonStyle.paddingTop,\n                  paddingBottom: buttonStyle.paddingBottom,\n                  height: buttonStyle.height,\n                  flexGrow: buttonFlex\n                }\n              ]}\n            >\n              {children}\n            </View>\n          </TouchableNativeFeedback>\n        </View>\n      );\n    }\n    return (\n      <TouchableNativeFeedback\n        ref={this.setRoot}\n        onPress={this.props.onPress}\n        background={\n          this.props.transparent\n            ? TouchableNativeFeedback.Ripple('transparent')\n            : TouchableNativeFeedback.Ripple(\n                variables.androidRippleColor,\n                false\n              )\n        }\n        {...rootProps}\n      >\n        <View {...rootProps}>{children}</View>\n      </TouchableNativeFeedback>\n    );\n  }\n}\n\nButton.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  block: PropTypes.bool,\n  primary: PropTypes.bool,\n  transparent: PropTypes.bool,\n  success: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  bordered: PropTypes.bool,\n  disabled: PropTypes.bool,\n  rounded: PropTypes.bool,\n  large: PropTypes.bool,\n  small: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nconst styles = StyleSheet.create({\n  childContainer: {\n    flexShrink: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nconst StyledButton = connectStyle(\n  'NativeBase.Button',\n  {},\n  mapPropsToStyleNames\n)(Button);\nexport { StyledButton as Button };"]},"metadata":{},"sourceType":"script"}