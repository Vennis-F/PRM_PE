{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Learn\\\\Nodejs\\\\PRM_SWD_Project\\\\mobile\\\\easy-shop\\\\node_modules\\\\react-native-drawer\\\\index.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport tween from \"./tweener\";\nvar deviceScreen = Dimensions.get('window');\nvar DOUBLE_TAP_INTERVAL = 500;\nvar TAP_DURATION = 250;\nvar propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles'];\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n  var _super = _createSuper(Drawer);\n  function Drawer() {\n    var _this;\n    _classCallCheck(this, Drawer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._length = 0;\n    _this._prevLength = 0;\n    _this._offsetOpen = 0;\n    _this._offsetClosed = 0;\n    _this._open = false;\n    _this._panning = false;\n    _this._tweenPending = false;\n    _this._activeTween = null;\n    _this._lastPress = 0;\n    _this._panStartTime = 0;\n    _this._syncAfterUpdate = false;\n    _this._interactionHandle = null;\n    _this.state = {\n      viewport: deviceScreen\n    };\n    _this.getChildContext = function () {\n      return {\n        drawer: _assertThisInitialized(_this)\n      };\n    };\n    _this.initialize = function (props) {\n      var fullLength = _this.getDeviceLength();\n      _this._offsetClosed = _this.getClosedOffset(props, _this.state.viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, _this.state.viewport);\n      _this._prevLength = _this._length;\n      var styles = {\n        container: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      };\n      styles.main = _extends({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.main);\n      styles.drawer = _extends({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.drawer);\n      if (props.initializeOpen || props.open) {\n        _this._open = true;\n        _this._length = fullLength - _this._offsetOpen;\n        styles.main[_this.props.side] = 0;\n        styles.drawer[_this.props.side] = 0;\n        if (props.type === 'static') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n        if (props.type === 'displace') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n      } else {\n        _this._open = false;\n        _this._length = _this._offsetClosed;\n        styles.main[_this.props.side] = _this._offsetClosed;\n        if (props.type === 'static') styles.drawer[_this.props.side] = 0;\n        if (props.type === 'overlay') styles.drawer[_this.props.side] = _this._offsetClosed + _this._offsetOpen - fullLength;\n        if (props.type === 'displace') styles.drawer[_this.props.side] = -fullLength + _this._offsetClosed + _this._offsetOpen;\n      }\n      if (_this.main) {\n        _this.drawer.setNativeProps({\n          style: {\n            left: styles.drawer.left\n          }\n        });\n        _this.main.setNativeProps({\n          style: {\n            left: styles.main.left\n          }\n        });\n      } else {\n        _this.stylesheet = StyleSheet.create(styles);\n        _this.responder = PanResponder.create({\n          onStartShouldSetPanResponder: _this.onStartShouldSetPanResponder,\n          onStartShouldSetPanResponderCapture: _this.onStartShouldSetPanResponderCapture,\n          onMoveShouldSetPanResponder: _this.onMoveShouldSetPanResponder,\n          onMoveShouldSetPanResponderCapture: _this.onMoveShouldSetPanResponderCapture,\n          onPanResponderMove: _this.onPanResponderMove,\n          onPanResponderRelease: _this.onPanResponderRelease,\n          onPanResponderTerminate: _this.onPanResponderTerminate\n        });\n      }\n      _this.resync(null, props);\n    };\n    _this.updatePosition = function () {\n      var mainProps = {};\n      var drawerProps = {};\n      var ratio = (_this._length - _this._offsetClosed) / (_this.getOpenLength() - _this._offsetClosed);\n      switch (_this.props.type) {\n        case 'overlay':\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._offsetOpen + _this._length;\n          mainProps[_this.props.side] = _this._offsetClosed;\n          break;\n        case 'static':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = 0;\n          break;\n        case 'displace':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._length + _this._offsetOpen;\n          break;\n      }\n      var mainOverlayProps = null;\n      var drawerOverlayProps = null;\n      if (_this.props.tweenHandler) {\n        var propsFrag = _this.props.tweenHandler(ratio, _this.props.side);\n        mainProps = _extends(mainProps, propsFrag.main);\n        drawerProps = _extends(drawerProps, propsFrag.drawer);\n        mainOverlayProps = propsFrag.mainOverlay;\n        drawerOverlayProps = propsFrag.drawerOverlay;\n      }\n      if (_this.main && _this.drawer && _this.mainOverlay && _this.drawerOverlay) {\n        _this.drawer.setNativeProps({\n          style: drawerProps\n        });\n        _this.main.setNativeProps({\n          style: mainProps\n        });\n        if (mainOverlayProps) _this.mainOverlay.setNativeProps({\n          style: mainOverlayProps\n        });\n        if (drawerOverlayProps) _this.drawerOverlay.setNativeProps({\n          style: drawerOverlayProps\n        });\n      }\n    };\n    _this.onPanResponderTerminate = function (e, gestureState) {\n      _this._panning = false;\n      _this.shouldOpenDrawer(_this.getGestureDelta(gestureState)) ? _this.open() : _this.close();\n    };\n    _this.onStartShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onStartShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onMoveShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onMoveShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n    _this.onPanResponderMove = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n      if (!_this.props.acceptPan) return false;\n      if (_this._open ^ delta < 0 ^ _this.isRightOrBottomSide()) return false;\n      delta = _this.isRightOrBottomSide() ? delta * -1 : delta;\n      var length = _this._prevLength + delta;\n      length = Math.min(length, _this.getOpenLength());\n      length = Math.max(length, _this.getClosedLength());\n      length = Math.round(length * 2) / 2;\n      _this._length = length;\n      _this.updatePosition();\n      if (!_this._panning) {\n        _this.props.onDragStart && _this.props.onDragStart();\n      }\n      _this._panning = true;\n    };\n    _this.onPanResponderRelease = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n      _this._panning = false;\n      if (Date.now() - _this._panStartTime < TAP_DURATION) _this.processTapGestures();\n      if (Math.abs(delta) < 50 && _this._activeTween) return;\n      _this.shouldOpenDrawer(delta) ? _this.open() : _this.close();\n      _this.updatePosition();\n      _this._prevLength = _this._length;\n    };\n    _this.processShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n      if (!inMask) return false;\n      if (!_this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false;\n      _this._panStartTime = Date.now();\n      if (inMask && _this.shouldCaptureGestures()) return true;\n      if (_this.props.negotiatePan) return false;\n      if (!_this.props.acceptPan) return false;\n      _this.terminateActiveTween();\n      return true;\n    };\n    _this.processMoveShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n      if (!inMask && (!_this.props.acceptPanOnDrawer || _this._open === false)) return false;\n      if (!_this.props.acceptPan) return false;\n      if (!_this.props.negotiatePan || _this.props.disabled || !_this.props.acceptPan || _this._panning) return false;\n      var delta = _this.getGestureDelta(gestureState);\n      var deltaOppositeAxis = _this.getGestureDeltaOppositeAxis(gestureState);\n      var swipeToLeftOrTop = delta < 0 ? true : false;\n      var swipeToRightOrBottom = delta > 0 ? true : false;\n      var swipeOppositeAxis = Math.abs(deltaOppositeAxis) >= Math.abs(delta) ? true : false;\n      var swipeInCloseDirection = _this.isLeftOrTopSide() ? swipeToLeftOrTop : swipeToRightOrBottom;\n      if (swipeOppositeAxis || _this._open && !swipeInCloseDirection || !_this._open && swipeInCloseDirection) {\n        return false;\n      }\n      _this.terminateActiveTween();\n      return true;\n    };\n    _this.processTapGestures = function () {\n      if (_this._activeTween) return false;\n      if (_this.props.acceptTap || _this.props.tapToClose && _this._open) {\n        _this._open ? _this.close() : _this.open();\n        return true;\n      }\n      if (_this.props.acceptDoubleTap) {\n        var now = new Date().getTime();\n        var timeDelta = now - _this._lastPress;\n        _this._lastPress = now;\n        if (timeDelta < DOUBLE_TAP_INTERVAL) {\n          _this._open ? _this.close() : _this.open();\n          return true;\n        }\n      }\n      return false;\n    };\n    _this.testPanResponderMask = function (e, gestureState) {\n      if (_this.props.disabled) return false;\n      if (_this.context.drawer && _this.context.drawer._open) return false;\n      if (_this._childDrawer && _this._childDrawer._open) return false;\n      var pos0 = _this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY;\n      var deltaOpen = _this.isLeftOrTopSide() ? _this.getDeviceLength() - pos0 : pos0;\n      var deltaClose = _this.isLeftOrTopSide() ? pos0 : _this.getDeviceLength() - pos0;\n      if (_this._open && deltaOpen > _this.getOpenMask()) return false;\n      if (!_this._open && deltaClose > _this.getClosedMask()) return false;\n      return true;\n    };\n    _this.terminateActiveTween = function () {\n      if (_this._activeTween) {\n        _this._activeTween.terminate();\n        _this._activeTween = null;\n      }\n    };\n    _this.open = function (type, cb) {\n      var start = _this._length;\n      var end = _this.getOpenLength();\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === true) return;\n      _this.props.onOpenStart && _this.props.onOpenStart();\n      _this.setInteractionHandle();\n      _this._activeTween = tween({\n        start: _this._length,\n        end: _this.getOpenLength(),\n        duration: _this.props.tweenDuration,\n        easingType: _this.props.tweenEasing,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = true;\n          _this._prevLength = _this._length;\n          _this.adjustForCaptureGestures();\n          _this.props.onOpen();\n          _this.clearInteractionHandle();\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n    _this.close = function (type, cb) {\n      var start = _this._length;\n      var end = _this.getClosedLength();\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === false) return;\n      _this.props.onCloseStart && _this.props.onCloseStart();\n      _this.setInteractionHandle();\n      _this._activeTween = tween({\n        start: start,\n        end: end,\n        easingType: _this.props.tweenEasing,\n        duration: _this.props.tweenDuration,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = false;\n          _this._prevLength = _this._length;\n          _this.adjustForCaptureGestures();\n          _this.props.onClose();\n          _this.clearInteractionHandle();\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n    _this.toggle = function () {\n      _this._open ? _this.close() : _this.open();\n    };\n    _this.handleSetViewport = function (e) {\n      var viewport = e.nativeEvent.layout;\n      var oldViewport = _this.state.viewport;\n      if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return;\n      var didRotationChange = viewport.width !== oldViewport.width;\n      _this.resync(viewport, null, didRotationChange);\n    };\n    _this.resync = function (viewport, props, didRotationChange) {\n      if (didRotationChange) _this._syncAfterUpdate = true;\n      viewport = viewport || _this.state.viewport;\n      props = props || _this.props;\n      _this._offsetClosed = _this.getClosedOffset(props, viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, viewport);\n      _this.setState({\n        viewport: viewport\n      });\n    };\n    _this.requiresResync = function (nextProps) {\n      for (var i = 0; i < propsWhomRequireUpdate.length; i++) {\n        var key = propsWhomRequireUpdate[i];\n        if (_this.props[key] !== nextProps[key]) return true;\n      }\n    };\n    _this.getDeviceLength = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width : viewport.height;\n    };\n    _this.getOpenLength = function () {\n      return _this.getDeviceLength() - _this._offsetOpen;\n    };\n    _this.getClosedLength = function () {\n      return _this._offsetClosed;\n    };\n    _this.getMainWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetClosed : viewport.width;\n    };\n    _this.getMainHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetClosed : viewport.height;\n    };\n    _this.getDrawerWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetOpen : viewport.width;\n    };\n    _this.getDrawerHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetOpen : viewport.height;\n    };\n    _this.getOpenMask = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      if (_this.props.panCloseMask && _this.props.panCloseMask % 1 === 0) return _this.props.panCloseMask;\n      if (_this.props.panCloseMask) return _this.getDeviceLength(viewport) * _this.props.panCloseMask;\n      return Math.max(0.05, _this._offsetOpen);\n    };\n    _this.getClosedMask = function () {\n      if (_this.props.panOpenMask && _this.props.panOpenMask % 1 === 0) return _this.props.panOpenMask;\n      if (_this.props.panOpenMask) return _this.getDeviceLength() * _this.props.panOpenMask;\n      return Math.max(0.05, _this._offsetClosed);\n    };\n    _this.getOpenOffset = function (props, viewport) {\n      if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport);\n      return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * _this.getDeviceLength(viewport);\n    };\n    _this.getClosedOffset = function (props, viewport) {\n      if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport);\n      return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * _this.getDeviceLength(viewport);\n    };\n    _this.getGestureDelta = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n    };\n    _this.getGestureDeltaOppositeAxis = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n    };\n    _this.isLeftOrRightSide = function () {\n      if (I18nManager.isRTL) {\n        return [\"right\", \"left\"].includes(_this.props.side);\n      } else {\n        return [\"left\", \"right\"].includes(_this.props.side);\n      }\n    };\n    _this.isTopOrBottomSide = function () {\n      return [\"top\", \"bottom\"].includes(_this.props.side);\n    };\n    _this.isLeftOrTopSide = function () {\n      var side = \"left\";\n      if (I18nManager.isRTL) {\n        side = \"right\";\n      }\n      return [side, \"top\"].includes(_this.props.side);\n    };\n    _this.isRightOrBottomSide = function () {\n      var side = \"right\";\n      if (I18nManager.isRTL) {\n        side = \"left\";\n      }\n      return [side, \"bottom\"].includes(_this.props.side);\n    };\n    return _this;\n  }\n  _createClass(Drawer, [{\n    key: \"_registerChildDrawer\",\n    value: function _registerChildDrawer(drawer) {\n      this._childDrawer = drawer;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.context.drawer) this.context.drawer._registerChildDrawer(this);\n      if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.');\n      if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.');\n      if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.');\n      this.initialize(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.requiresResync(nextProps)) this.resync(null, nextProps);\n      if (nextProps.open !== null && this._open !== nextProps.open) {\n        this._syncAfterUpdate = true;\n        this._open = nextProps.open;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._syncAfterUpdate) {\n        this._syncAfterUpdate = false;\n        this._open ? this.open('force') : this.close('force');\n      }\n    }\n  }, {\n    key: \"shouldOpenDrawer\",\n    value: function shouldOpenDrawer(delta) {\n      var hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide();\n      if (!hasActiveHeading) return this._open;else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold;\n    }\n  }, {\n    key: \"shouldCaptureGestures\",\n    value: function shouldCaptureGestures() {\n      if (this.props.captureGestures === true) return true;\n      if (this.props.captureGestures === 'closed' && this._open === false) return true;\n      if (this.props.captureGestures === 'open' && this._open === true) return true;\n      return false;\n    }\n  }, {\n    key: \"adjustForCaptureGestures\",\n    value: function adjustForCaptureGestures() {\n      if (!this.props.captureGestures) return;\n      var shouldCapture = this.shouldCaptureGestures();\n      if (this.mainOverlay && this.drawerOverlay) {\n        this.mainOverlay.setNativeProps({\n          pointerEvents: shouldCapture && this._open ? 'auto' : 'none'\n        });\n        this.drawerOverlay.setNativeProps({\n          pointerEvents: shouldCapture && !this._open ? 'auto' : 'none'\n        });\n      }\n    }\n  }, {\n    key: \"setInteractionHandle\",\n    value: function setInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n      if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  }, {\n    key: \"clearInteractionHandle\",\n    value: function clearInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer();\n      var second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain();\n      return React.createElement(View, {\n        key: \"drawerContainer\",\n        onLayout: this.handleSetViewport,\n        style: this.stylesheet.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 7\n        }\n      }, first, second);\n    }\n  }, {\n    key: \"renderMain\",\n    value: function renderMain() {\n      var _this2 = this;\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"main\",\n        ref: function ref(c) {\n          return _this2.main = c;\n        },\n        style: [this.stylesheet.main, {\n          height: this.getMainHeight(),\n          width: this.getMainWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 7\n        }\n      }), this.props.children, React.createElement(View, {\n        pointerEvents: this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this2.mainOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.mainOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderDrawer\",\n    value: function renderDrawer() {\n      var _this3 = this;\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"drawer\",\n        ref: function ref(c) {\n          return _this3.drawer = c;\n        },\n        elevation: this.props.elevation,\n        style: [this.stylesheet.drawer, {\n          height: this.getDrawerHeight(),\n          width: this.getDrawerWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 7\n        }\n      }), this.props.content, React.createElement(View, {\n        pointerEvents: !this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this3.drawerOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.drawerOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return Drawer;\n}(Component);\nDrawer.tweenPresets = {\n  parallax: function parallax(ratio) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left';\n    var drawer = _defineProperty({}, side, -150 * (1 - ratio));\n    return {\n      drawer: drawer\n    };\n  }\n};\nDrawer.propTypes = {\n  acceptDoubleTap: PropTypes.bool,\n  acceptPan: PropTypes.bool,\n  acceptTap: PropTypes.bool,\n  acceptPanOnDrawer: PropTypes.bool,\n  captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n  children: PropTypes.node,\n  closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  content: PropTypes.node,\n  disabled: PropTypes.bool,\n  elevation: PropTypes.number,\n  initializeOpen: PropTypes.bool,\n  open: PropTypes.bool,\n  negotiatePan: PropTypes.bool,\n  onClose: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onOpen: PropTypes.func,\n  onOpenStart: PropTypes.func,\n  onDragStart: PropTypes.func,\n  openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  panThreshold: PropTypes.number,\n  panCloseMask: PropTypes.number,\n  panOpenMask: PropTypes.number,\n  side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  styles: PropTypes.object,\n  tapToClose: PropTypes.bool,\n  tweenDuration: PropTypes.number,\n  tweenEasing: PropTypes.string,\n  tweenHandler: PropTypes.func,\n  type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n  useInteractionManager: PropTypes.bool,\n  panStartCompensation: PropTypes.bool,\n  openDrawerThreshold: PropTypes.any\n};\nDrawer.defaultProps = {\n  open: null,\n  initializeOpen: false,\n  type: 'displace',\n  closedDrawerOffset: 0,\n  openDrawerOffset: 0,\n  panThreshold: 0.25,\n  panOpenMask: null,\n  panCloseMask: null,\n  tweenHandler: null,\n  tweenDuration: 250,\n  tweenEasing: 'linear',\n  disabled: false,\n  negotiatePan: false,\n  captureGestures: 'open',\n  acceptDoubleTap: false,\n  acceptTap: false,\n  acceptPan: true,\n  acceptPanOnDrawer: true,\n  tapToClose: false,\n  styles: {},\n  elevation: 0,\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  side: 'left',\n  useInteractionManager: false\n};\nDrawer.contextTypes = {\n  drawer: PropTypes.object\n};\nDrawer.childContextTypes = {\n  drawer: PropTypes.object\n};\nexport { Drawer as default };\nvar styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","tween","deviceScreen","Dimensions","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","StyleSheet","create","responder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","length","Math","min","max","getClosedLength","round","onDragStart","Date","now","processTapGestures","abs","inMask","testPanResponderMask","dy","dx","terminateActiveTween","acceptPanOnDrawer","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","I18nManager","isRTL","includes","_registerChildDrawer","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","InteractionManager","useInteractionManager","createInteractionHandle","first","renderMain","renderDrawer","second","panHandlers","c","children","overlay","elevation","content","tweenPresets","parallax","propTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","right","bottom","backgroundColor"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-drawer/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\r\n\r\nimport tween from './tweener'\r\n\r\nlet deviceScreen = Dimensions.get('window')\r\nconst DOUBLE_TAP_INTERVAL = 500\r\nconst TAP_DURATION = 250\r\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\r\n\r\nexport default class Drawer extends Component {\r\n\r\n  _length = 0;\r\n  _prevLength = 0;\r\n  _offsetOpen = 0;\r\n  _offsetClosed = 0;\r\n  _open = false;\r\n  _panning = false;\r\n  _tweenPending = false;\r\n  _activeTween = null;\r\n  _lastPress = 0;\r\n  _panStartTime = 0;\r\n  _syncAfterUpdate = false;\r\n  _interactionHandle = null;\r\n\r\n  static tweenPresets = {\r\n    parallax: (ratio, side = 'left') => {\r\n      let drawer = { [side] : -150 * (1 - ratio)}\r\n      return { drawer }\r\n    }\r\n  };\r\n\r\n  state = {\r\n    viewport: deviceScreen\r\n  };\r\n\r\n  static propTypes = {\r\n    acceptDoubleTap: PropTypes.bool,\r\n    acceptPan: PropTypes.bool,\r\n    acceptTap: PropTypes.bool,\r\n    acceptPanOnDrawer: PropTypes.bool,\r\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\r\n    children: PropTypes.node,\r\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\r\n    content: PropTypes.node,\r\n    disabled: PropTypes.bool,\r\n    elevation: PropTypes.number,\r\n    initializeOpen: PropTypes.bool,\r\n    open: PropTypes.bool,\r\n    negotiatePan: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onCloseStart: PropTypes.func,\r\n    onOpen: PropTypes.func,\r\n    onOpenStart: PropTypes.func,\r\n    onDragStart: PropTypes.func,\r\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\r\n    panThreshold: PropTypes.number,\r\n    panCloseMask: PropTypes.number,\r\n    panOpenMask: PropTypes.number,\r\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\r\n    styles: PropTypes.object,\r\n    tapToClose: PropTypes.bool,\r\n    tweenDuration: PropTypes.number,\r\n    tweenEasing: PropTypes.string,\r\n    tweenHandler: PropTypes.func,\r\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\r\n    useInteractionManager: PropTypes.bool,\r\n\r\n    // deprecated\r\n    panStartCompensation: PropTypes.bool,\r\n    openDrawerThreshold: PropTypes.any,\r\n  };\r\n\r\n  static defaultProps = {\r\n    open: null,\r\n    initializeOpen: false,\r\n\r\n    type: 'displace',\r\n    closedDrawerOffset: 0,\r\n    openDrawerOffset: 0,\r\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\r\n    panOpenMask: null, // defaults to closedDrawerOffset\r\n    panCloseMask: null, // defaults to openDrawerOffset\r\n\r\n    tweenHandler: null,\r\n    tweenDuration: 250,\r\n    tweenEasing: 'linear',\r\n\r\n    disabled: false,\r\n    negotiatePan: false,\r\n    captureGestures: 'open',\r\n    acceptDoubleTap: false,\r\n    acceptTap: false,\r\n    acceptPan: true,\r\n    acceptPanOnDrawer: true,\r\n    tapToClose: false,\r\n\r\n    styles: {},\r\n    elevation: 0,\r\n    onOpen: () => {},\r\n    onClose: () => {},\r\n    side: 'left',\r\n\r\n    useInteractionManager: false,\r\n  };\r\n\r\n  /*** CONTEXT ***/\r\n  static contextTypes = { drawer: PropTypes.object };\r\n  static childContextTypes = { drawer: PropTypes.object };\r\n  getChildContext = () => ({ drawer: this });\r\n  /*** END CONTEXT ***/\r\n\r\n  _registerChildDrawer(drawer) {\r\n    // Store child drawer for gesture disambiguation with multi drawer\r\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\r\n    this._childDrawer = drawer\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\r\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\r\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\r\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\r\n    this.initialize(this.props)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\r\n\r\n    if (nextProps.open !== null && this._open !== nextProps.open) {\r\n      this._syncAfterUpdate = true\r\n      this._open = nextProps.open\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this._syncAfterUpdate) {\r\n      this._syncAfterUpdate = false\r\n      this._open ? this.open('force') : this.close('force')\r\n    }\r\n  }\r\n\r\n  initialize = (props) => {\r\n    let fullLength = this.getDeviceLength();\r\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\r\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\r\n    // add function options\r\n    this._prevLength = this._length\r\n\r\n    let styles = {\r\n      container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    }\r\n\r\n    styles.main = Object.assign({\r\n      position: 'absolute',\r\n      borderWidth: 0,\r\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\r\n\r\n    styles.drawer = Object.assign({\r\n      position: 'absolute',\r\n      borderWidth:0,\r\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\r\n\r\n    if (props.initializeOpen || props.open) { // open\r\n      this._open = true\r\n      this._length = fullLength - this._offsetOpen\r\n      styles.main[this.props.side] = 0\r\n      styles.drawer[this.props.side] = 0\r\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\r\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\r\n    } else { // closed\r\n      this._open = false\r\n      this._length = this._offsetClosed\r\n      styles.main[this.props.side] = this._offsetClosed\r\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\r\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\r\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\r\n    }\r\n\r\n    if (this.main) {\r\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\r\n      this.main.setNativeProps({ style: {left: styles.main.left}})\r\n    } else {\r\n      this.stylesheet = StyleSheet.create(styles)\r\n      this.responder = PanResponder.create({\r\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\r\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\r\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\r\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\r\n        onPanResponderMove: this.onPanResponderMove,\r\n        onPanResponderRelease: this.onPanResponderRelease,\r\n\tonPanResponderTerminate: this.onPanResponderTerminate\r\n      })\r\n    }\r\n\r\n    this.resync(null, props)\r\n  };\r\n\r\n  updatePosition = () => {\r\n    let mainProps = {}\r\n    let drawerProps = {}\r\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\r\n\r\n    switch (this.props.type) {\r\n      case 'overlay':\r\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\r\n        mainProps[this.props.side] = this._offsetClosed\r\n        break\r\n      case 'static':\r\n        mainProps[this.props.side] = this._length\r\n        drawerProps[this.props.side] = 0\r\n        break\r\n      case 'displace':\r\n        mainProps[this.props.side] = this._length\r\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\r\n        break\r\n    }\r\n\r\n    let mainOverlayProps = null\r\n    let drawerOverlayProps = null\r\n    if (this.props.tweenHandler) {\r\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\r\n      mainProps = Object.assign(mainProps, propsFrag.main)\r\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\r\n      mainOverlayProps = propsFrag.mainOverlay\r\n      drawerOverlayProps = propsFrag.drawerOverlay\r\n    }\r\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\r\n      this.drawer.setNativeProps({style: drawerProps})\r\n      this.main.setNativeProps({style: mainProps})\r\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\r\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\r\n    }\r\n  };\r\n\r\n  shouldOpenDrawer(delta) {\r\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\r\n    if (!hasActiveHeading) return this._open\r\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\r\n  }\r\n\r\n  onPanResponderTerminate = (e, gestureState) => {\r\n    this._panning = false\r\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\r\n  };\r\n\r\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\r\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onStartShouldSetPanResponder = (e, gestureState) => {\r\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\r\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onMoveShouldSetPanResponder = (e, gestureState) => {\r\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onPanResponderMove = (e, gestureState) => {\r\n    let delta = this.getGestureDelta(gestureState);\r\n    if (!this.props.acceptPan) return false\r\n\r\n    //Do nothing if we are panning the wrong way\r\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\r\n\r\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\r\n    let length = this._prevLength + delta\r\n    length = Math.min(length, this.getOpenLength())\r\n    length = Math.max(length, this.getClosedLength())\r\n    length = Math.round(length*2)/2\r\n    this._length = length\r\n\r\n    this.updatePosition()\r\n    if (!this._panning) {\r\n      this.props.onDragStart && this.props.onDragStart();\r\n    }\r\n    this._panning = true\r\n  };\r\n\r\n  onPanResponderRelease = (e, gestureState) => {\r\n    let delta = this.getGestureDelta(gestureState);\r\n    this._panning = false\r\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\r\n    if (Math.abs(delta) < 50 && this._activeTween) return\r\n\r\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\r\n    this.updatePosition()\r\n    this._prevLength = this._length\r\n  };\r\n\r\n  processShouldSet = (e, gestureState) => {\r\n    let inMask = this.testPanResponderMask(e, gestureState)\r\n    if (!inMask) return false\r\n    // skip gesture process if we have mostly vertical swipe\r\n    if (!this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false\r\n    this._panStartTime = Date.now()\r\n    if (inMask && this.shouldCaptureGestures()) return true\r\n    if (this.props.negotiatePan) return false\r\n    if (!this.props.acceptPan) return false\r\n    this.terminateActiveTween()\r\n    return true\r\n  };\r\n\r\n  processMoveShouldSet = (e, gestureState) => {\r\n    let inMask = this.testPanResponderMask(e, gestureState)\r\n    if (!inMask && (!this.props.acceptPanOnDrawer || this._open === false )) return false\r\n    if (!this.props.acceptPan) return false\r\n\r\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\r\n    let delta = this.getGestureDelta(gestureState)\r\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\r\n    let swipeToLeftOrTop = (delta < 0) ? true : false\r\n    let swipeToRightOrBottom = (delta > 0) ? true : false\r\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\r\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\r\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\r\n      return false\r\n    }\r\n\r\n    this.terminateActiveTween()\r\n    return true\r\n  };\r\n\r\n  processTapGestures = () => {\r\n    if (this._activeTween) return false // disable tap gestures during tween\r\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\r\n      this._open ? this.close() : this.open()\r\n      return true\r\n    }\r\n    if (this.props.acceptDoubleTap) {\r\n      let now = new Date().getTime()\r\n      let timeDelta = now - this._lastPress\r\n      this._lastPress = now\r\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\r\n        this._open ? this.close() : this.open()\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  };\r\n\r\n  shouldCaptureGestures() {\r\n    if (this.props.captureGestures === true) return true\r\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\r\n    if (this.props.captureGestures === 'open' && this._open === true) return true\r\n    return false\r\n  }\r\n\r\n  testPanResponderMask = (e, gestureState) => {\r\n    if (this.props.disabled) return false\r\n\r\n    // Disable if parent or child drawer exist and are open\r\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\r\n    if (this.context.drawer && this.context.drawer._open) return false\r\n    if (this._childDrawer && this._childDrawer._open) return false\r\n\r\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\r\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\r\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\r\n\r\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\r\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\r\n    return true\r\n  };\r\n\r\n  terminateActiveTween = () => {\r\n    if (this._activeTween) {\r\n      this._activeTween.terminate()\r\n      this._activeTween = null\r\n    }\r\n  };\r\n\r\n  open = (type, cb) => {\r\n    let start = this._length\r\n    let end = this.getOpenLength()\r\n\r\n    if (this._activeTween) return\r\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\r\n\r\n    this.props.onOpenStart && this.props.onOpenStart()\r\n    this.setInteractionHandle()\r\n    this._activeTween = tween({\r\n      start: this._length,\r\n      end: this.getOpenLength(),\r\n      duration: this.props.tweenDuration,\r\n      easingType: this.props.tweenEasing,\r\n      onFrame: (tweenValue) => {\r\n\tthis._length = Math.round(tweenValue*2)/2;\r\n        this.updatePosition()\r\n      },\r\n      onEnd: () => {\r\n        this._activeTween = null\r\n        this._open = true\r\n        this._prevLength = this._length\r\n        this.adjustForCaptureGestures()\r\n        this.props.onOpen()\r\n        this.clearInteractionHandle()\r\n\r\n        if(typeof type === 'function') {\r\n          type() // this is actually a callback\r\n        } else cb && cb()\r\n\r\n      }\r\n    })\r\n  };\r\n\r\n  close = (type, cb) => {\r\n    let start = this._length\r\n    let end = this.getClosedLength()\r\n\r\n    if (this._activeTween) return\r\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\r\n\r\n    this.props.onCloseStart && this.props.onCloseStart()\r\n    this.setInteractionHandle()\r\n    this._activeTween = tween({\r\n      start,\r\n      end,\r\n      easingType: this.props.tweenEasing,\r\n      duration: this.props.tweenDuration,\r\n      onFrame: (tweenValue) => {\r\n\tthis._length = Math.round(tweenValue*2)/2;\r\n        this.updatePosition()\r\n      },\r\n      onEnd: () => {\r\n        this._activeTween = null\r\n        this._open = false\r\n        this._prevLength = this._length\r\n        this.adjustForCaptureGestures()\r\n        this.props.onClose()\r\n        this.clearInteractionHandle()\r\n\r\n        if(typeof type === 'function') {\r\n          type() // this is actually a callback\r\n        } else cb && cb()\r\n\r\n      }\r\n    })\r\n  };\r\n\r\n  adjustForCaptureGestures() {\r\n    if (!this.props.captureGestures) return\r\n    let shouldCapture = this.shouldCaptureGestures()\r\n    if (this.mainOverlay && this.drawerOverlay) {\r\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\r\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\r\n    }\r\n  }\r\n\r\n  setInteractionHandle() {\r\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\r\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\r\n  }\r\n\r\n  clearInteractionHandle() {\r\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\r\n  }\r\n\r\n  toggle = () => {\r\n    this._open ? this.close() : this.open()\r\n  };\r\n\r\n  handleSetViewport = (e) => {\r\n    let viewport = e.nativeEvent.layout\r\n    let oldViewport = this.state.viewport\r\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\r\n    let didRotationChange = viewport.width !== oldViewport.width\r\n    this.resync(viewport, null, didRotationChange)\r\n  };\r\n\r\n  resync = (viewport, props, didRotationChange) => {\r\n    if (didRotationChange) this._syncAfterUpdate = true\r\n    viewport = viewport || this.state.viewport\r\n    props = props || this.props\r\n    this._offsetClosed = this.getClosedOffset(props, viewport)\r\n    this._offsetOpen = this.getOpenOffset(props, viewport)\r\n    this.setState({ viewport })\r\n  };\r\n\r\n  requiresResync = (nextProps) => {\r\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\r\n      let key = propsWhomRequireUpdate[i]\r\n      if (this.props[key] !== nextProps[key]) return true\r\n    }\r\n  };\r\n\r\n  /*** DYNAMIC GETTERS ***/\r\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\r\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\r\n  getClosedLength = () => this._offsetClosed;\r\n  getMainWidth = (viewport = this.state.viewport) => {\r\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\r\n  };\r\n  getMainHeight = (viewport = this.state.viewport) => {\r\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\r\n  };\r\n  getDrawerWidth = (viewport = this.state.viewport) => {\r\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\r\n  };\r\n  getDrawerHeight = (viewport = this.state.viewport) => {\r\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\r\n  };\r\n  getOpenMask = (viewport = this.state.viewport) => {\r\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\r\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\r\n    return Math.max(0.05, this._offsetOpen)\r\n  };\r\n  getClosedMask = () => {\r\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\r\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\r\n    return Math.max(0.05, this._offsetClosed)\r\n  };\r\n  getOpenOffset = (props, viewport) => {\r\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\r\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\r\n  };\r\n  getClosedOffset = (props, viewport) => {\r\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\r\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\r\n  };\r\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\r\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\r\n  /*** END DYNAMIC GETTERS ***/\r\n\r\n  isLeftOrRightSide = () => {\r\n    if (I18nManager.isRTL) {\r\n      return [\"right\", \"left\"].includes(this.props.side)\r\n    } else {\r\n      return [\"left\", \"right\"].includes(this.props.side)\r\n    }\r\n  }\r\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\r\n  isLeftOrTopSide = () => {\r\n    let side = \"left\";\r\n    if (I18nManager.isRTL) {\r\n      side = \"right\";\r\n    }\r\n    return [side, \"top\"].includes(this.props.side);\r\n  }\r\n  isRightOrBottomSide = () => {\r\n    let side = \"right\"\r\n    if (I18nManager.isRTL) {\r\n      side = \"left\"\r\n    }\r\n    return [side, \"bottom\"].includes(this.props.side);\r\n  }\r\n\r\n  render() {\r\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\r\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\r\n\r\n    return (\r\n      <View\r\n        key=\"drawerContainer\"\r\n        onLayout={this.handleSetViewport}\r\n        style={this.stylesheet.container}\r\n        >\r\n        {first}\r\n        {second}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  renderMain() {\r\n    return (\r\n      <View\r\n        {...this.responder.panHandlers}\r\n        key=\"main\"\r\n        ref={c => this.main = c}\r\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\r\n        >\r\n        {this.props.children}\r\n        <View\r\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\r\n          ref={c => this.mainOverlay = c}\r\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\r\n          />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  renderDrawer() {\r\n    return (\r\n      <View\r\n        {...this.responder.panHandlers}\r\n        key=\"drawer\"\r\n        ref={c => this.drawer = c}\r\n        elevation={this.props.elevation}\r\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\r\n        >\r\n        {this.props.content}\r\n        <View\r\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\r\n          ref={c => this.drawerOverlay = c}\r\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\r\n          />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    right: 0,\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent'\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}