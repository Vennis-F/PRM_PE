{"ast":null,"code":"import { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../hooks/useElementLayout\";\nimport useLayoutEffect from \"../../hooks/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../hooks/usePlatformMethods\";\nimport useResponderEvents from \"../../hooks/useResponderEvents\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar TextInput = forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    returnKeyType = props.returnKeyType,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n    case 'phone-pad':\n      type = 'tel';\n      break;\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n    case 'url':\n      type = 'url';\n      break;\n    default:\n      type = 'text';\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var node = hostRef.current;\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;","map":{"version":3,"names":["forwardRef","useCallback","useMemo","useRef","createElement","css","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessible","autoCapitalize","autoComplete","autoCorrect","autoFocus","children","classList","defaultValue","dir","disabled","importantForAccessibility","maxLength","nativeID","onBlur","onChange","onClick","onClickCapture","onContextMenu","onFocus","onScroll","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","placeholder","pointerEvents","readOnly","ref","rows","spellCheck","style","value","testID","type","dataSet","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onMouseOut","onMouseUp","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onChangeText","onContentSizeChange","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","height","width","hostRef","handleContentSizeChange","current","newHeight","scrollHeight","newWidth","scrollWidth","contentSize","imperativeRef","hostNode","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classes","textinput","compose","supportedProps","undefined","enterkeyhint","onKeyDown","onSelect","platformMethodsRef","setRef","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\r\nimport createElement from '../createElement';\r\nimport css from '../StyleSheet/css';\r\nimport pick from '../../modules/pick';\r\nimport useElementLayout from '../../hooks/useElementLayout';\r\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\r\nimport useMergeRefs from '../../modules/useMergeRefs';\r\nimport usePlatformMethods from '../../hooks/usePlatformMethods';\r\nimport useResponderEvents from '../../hooks/useResponderEvents';\r\nimport StyleSheet from '../StyleSheet';\r\nimport TextInputState from '../../modules/TextInputState';\r\n/**\r\n * Determines whether a 'selection' prop differs from a node's existing\r\n * selection state.\r\n */\r\n\r\nvar isSelectionStale = function isSelectionStale(node, selection) {\r\n  var selectionEnd = node.selectionEnd,\r\n      selectionStart = node.selectionStart;\r\n  var start = selection.start,\r\n      end = selection.end;\r\n  return start !== selectionStart || end !== selectionEnd;\r\n};\r\n/**\r\n * Certain input types do no support 'selectSelectionRange' and will throw an\r\n * error.\r\n */\r\n\r\n\r\nvar setSelection = function setSelection(node, selection) {\r\n  if (isSelectionStale(node, selection)) {\r\n    var start = selection.start,\r\n        end = selection.end;\r\n\r\n    try {\r\n      node.setSelectionRange(start, end || start);\r\n    } catch (e) {}\r\n  }\r\n};\r\n\r\nvar forwardPropsList = {\r\n  accessibilityLabel: true,\r\n  accessibilityLiveRegion: true,\r\n  accessibilityRole: true,\r\n  accessibilityState: true,\r\n  accessibilityValue: true,\r\n  accessible: true,\r\n  autoCapitalize: true,\r\n  autoComplete: true,\r\n  autoCorrect: true,\r\n  autoFocus: true,\r\n  children: true,\r\n  classList: true,\r\n  defaultValue: true,\r\n  dir: true,\r\n  disabled: true,\r\n  importantForAccessibility: true,\r\n  maxLength: true,\r\n  nativeID: true,\r\n  onBlur: true,\r\n  onChange: true,\r\n  onClick: true,\r\n  onClickCapture: true,\r\n  onContextMenu: true,\r\n  onFocus: true,\r\n  onScroll: true,\r\n  onTouchCancel: true,\r\n  onTouchCancelCapture: true,\r\n  onTouchEnd: true,\r\n  onTouchEndCapture: true,\r\n  onTouchMove: true,\r\n  onTouchMoveCapture: true,\r\n  onTouchStart: true,\r\n  onTouchStartCapture: true,\r\n  placeholder: true,\r\n  pointerEvents: true,\r\n  readOnly: true,\r\n  ref: true,\r\n  rows: true,\r\n  spellCheck: true,\r\n  style: true,\r\n  value: true,\r\n  testID: true,\r\n  type: true,\r\n  // unstable\r\n  dataSet: true,\r\n  onMouseDown: true,\r\n  onMouseEnter: true,\r\n  onMouseLeave: true,\r\n  onMouseMove: true,\r\n  onMouseOver: true,\r\n  onMouseOut: true,\r\n  onMouseUp: true\r\n};\r\n\r\nvar pickProps = function pickProps(props) {\r\n  return pick(props, forwardPropsList);\r\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\r\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\r\n\r\n\r\nfunction isEventComposing(nativeEvent) {\r\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\r\n}\r\n\r\nvar TextInput = forwardRef(function (props, forwardedRef) {\r\n  var _props$autoCapitalize = props.autoCapitalize,\r\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\r\n      autoComplete = props.autoComplete,\r\n      autoCompleteType = props.autoCompleteType,\r\n      _props$autoCorrect = props.autoCorrect,\r\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\r\n      blurOnSubmit = props.blurOnSubmit,\r\n      clearTextOnFocus = props.clearTextOnFocus,\r\n      dir = props.dir,\r\n      _props$editable = props.editable,\r\n      editable = _props$editable === void 0 ? true : _props$editable,\r\n      _props$keyboardType = props.keyboardType,\r\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\r\n      _props$multiline = props.multiline,\r\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\r\n      _props$numberOfLines = props.numberOfLines,\r\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\r\n      onBlur = props.onBlur,\r\n      onChange = props.onChange,\r\n      onChangeText = props.onChangeText,\r\n      onContentSizeChange = props.onContentSizeChange,\r\n      onFocus = props.onFocus,\r\n      onKeyPress = props.onKeyPress,\r\n      onLayout = props.onLayout,\r\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\r\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\r\n      onResponderEnd = props.onResponderEnd,\r\n      onResponderGrant = props.onResponderGrant,\r\n      onResponderMove = props.onResponderMove,\r\n      onResponderReject = props.onResponderReject,\r\n      onResponderRelease = props.onResponderRelease,\r\n      onResponderStart = props.onResponderStart,\r\n      onResponderTerminate = props.onResponderTerminate,\r\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\r\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\r\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\r\n      onSelectionChange = props.onSelectionChange,\r\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\r\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\r\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\r\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\r\n      onSubmitEditing = props.onSubmitEditing,\r\n      placeholderTextColor = props.placeholderTextColor,\r\n      returnKeyType = props.returnKeyType,\r\n      _props$secureTextEntr = props.secureTextEntry,\r\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\r\n      selection = props.selection,\r\n      selectTextOnFocus = props.selectTextOnFocus,\r\n      spellCheck = props.spellCheck;\r\n  var type;\r\n  var inputMode;\r\n\r\n  switch (keyboardType) {\r\n    case 'email-address':\r\n      type = 'email';\r\n      break;\r\n\r\n    case 'number-pad':\r\n    case 'numeric':\r\n      inputMode = 'numeric';\r\n      break;\r\n\r\n    case 'decimal-pad':\r\n      inputMode = 'decimal';\r\n      break;\r\n\r\n    case 'phone-pad':\r\n      type = 'tel';\r\n      break;\r\n\r\n    case 'search':\r\n    case 'web-search':\r\n      type = 'search';\r\n      break;\r\n\r\n    case 'url':\r\n      type = 'url';\r\n      break;\r\n\r\n    default:\r\n      type = 'text';\r\n  }\r\n\r\n  if (secureTextEntry) {\r\n    type = 'password';\r\n  }\r\n\r\n  var dimensions = useRef({\r\n    height: null,\r\n    width: null\r\n  });\r\n  var hostRef = useRef(null);\r\n  var handleContentSizeChange = useCallback(function () {\r\n    var node = hostRef.current;\r\n\r\n    if (multiline && onContentSizeChange && node != null) {\r\n      var newHeight = node.scrollHeight;\r\n      var newWidth = node.scrollWidth;\r\n\r\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\r\n        dimensions.current.height = newHeight;\r\n        dimensions.current.width = newWidth;\r\n        onContentSizeChange({\r\n          nativeEvent: {\r\n            contentSize: {\r\n              height: dimensions.current.height,\r\n              width: dimensions.current.width\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [hostRef, multiline, onContentSizeChange]);\r\n  var imperativeRef = useMemo(function () {\r\n    return function (hostNode) {\r\n      // TextInput needs to add more methods to the hostNode in addition to those\r\n      // added by `usePlatformMethods`. This is temporarily until an API like\r\n      // `TextInput.clear(hostRef)` is added to React Native.\r\n      if (hostNode != null) {\r\n        hostNode.clear = function () {\r\n          if (hostNode != null) {\r\n            hostNode.value = '';\r\n          }\r\n        };\r\n\r\n        hostNode.isFocused = function () {\r\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\r\n        };\r\n\r\n        handleContentSizeChange();\r\n      }\r\n    };\r\n  }, [handleContentSizeChange]);\r\n\r\n  function handleBlur(e) {\r\n    TextInputState._currentlyFocusedNode = null;\r\n\r\n    if (onBlur) {\r\n      e.nativeEvent.text = e.target.value;\r\n      onBlur(e);\r\n    }\r\n  }\r\n\r\n  function handleChange(e) {\r\n    var text = e.target.value;\r\n    e.nativeEvent.text = text;\r\n    handleContentSizeChange();\r\n\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n\r\n    if (onChangeText) {\r\n      onChangeText(text);\r\n    }\r\n  }\r\n\r\n  function handleFocus(e) {\r\n    var node = hostRef.current;\r\n\r\n    if (node != null) {\r\n      TextInputState._currentlyFocusedNode = node;\r\n\r\n      if (onFocus) {\r\n        e.nativeEvent.text = e.target.value;\r\n        onFocus(e);\r\n      }\r\n\r\n      if (clearTextOnFocus) {\r\n        node.value = '';\r\n      }\r\n\r\n      if (selectTextOnFocus) {\r\n        node.select();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    // Prevent key events bubbling (see #612)\r\n    e.stopPropagation();\r\n    var blurOnSubmitDefault = !multiline;\r\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\r\n    var nativeEvent = e.nativeEvent;\r\n    var isComposing = isEventComposing(nativeEvent);\r\n\r\n    if (onKeyPress) {\r\n      onKeyPress(e);\r\n    }\r\n\r\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\r\n    !isComposing && !e.isDefaultPrevented()) {\r\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\r\n        // prevent \"Enter\" from inserting a newline or submitting a form\r\n        e.preventDefault();\r\n        nativeEvent.text = e.target.value;\r\n        onSubmitEditing(e);\r\n      }\r\n\r\n      if (shouldBlurOnSubmit && hostRef.current != null) {\r\n        hostRef.current.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleSelectionChange(e) {\r\n    if (onSelectionChange) {\r\n      try {\r\n        var node = e.target;\r\n        var selectionStart = node.selectionStart,\r\n            selectionEnd = node.selectionEnd;\r\n        e.nativeEvent.selection = {\r\n          start: selectionStart,\r\n          end: selectionEnd\r\n        };\r\n        e.nativeEvent.text = e.target.value;\r\n        onSelectionChange(e);\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(function () {\r\n    var node = hostRef.current;\r\n\r\n    if (node != null && selection != null) {\r\n      setSelection(node, selection);\r\n    }\r\n\r\n    if (document.activeElement === node) {\r\n      TextInputState._currentlyFocusedNode = node;\r\n    }\r\n  }, [hostRef, selection]);\r\n  var component = multiline ? 'textarea' : 'input';\r\n  var classList = [classes.textinput];\r\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\r\n    placeholderTextColor: placeholderTextColor\r\n  });\r\n  useElementLayout(hostRef, onLayout);\r\n  useResponderEvents(hostRef, {\r\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\r\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\r\n    onResponderEnd: onResponderEnd,\r\n    onResponderGrant: onResponderGrant,\r\n    onResponderMove: onResponderMove,\r\n    onResponderReject: onResponderReject,\r\n    onResponderRelease: onResponderRelease,\r\n    onResponderStart: onResponderStart,\r\n    onResponderTerminate: onResponderTerminate,\r\n    onResponderTerminationRequest: onResponderTerminationRequest,\r\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\r\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\r\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\r\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\r\n    onStartShouldSetResponder: onStartShouldSetResponder,\r\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\r\n  });\r\n  var supportedProps = pickProps(props);\r\n  supportedProps.autoCapitalize = autoCapitalize;\r\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\r\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\r\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\r\n\r\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\r\n  supportedProps.enterkeyhint = returnKeyType;\r\n  supportedProps.onBlur = handleBlur;\r\n  supportedProps.onChange = handleChange;\r\n  supportedProps.onFocus = handleFocus;\r\n  supportedProps.onKeyDown = handleKeyDown;\r\n  supportedProps.onSelect = handleSelectionChange;\r\n  supportedProps.readOnly = !editable;\r\n  supportedProps.rows = multiline ? numberOfLines : undefined;\r\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\r\n  supportedProps.style = style;\r\n  supportedProps.type = multiline ? undefined : type;\r\n  supportedProps.inputMode = inputMode;\r\n  var platformMethodsRef = usePlatformMethods(supportedProps);\r\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\r\n  supportedProps.ref = setRef;\r\n  return createElement(component, supportedProps);\r\n});\r\nTextInput.displayName = 'TextInput'; // $FlowFixMe\r\n\r\nTextInput.State = TextInputState;\r\nvar classes = css.create({\r\n  textinput: {\r\n    MozAppearance: 'textfield',\r\n    WebkitAppearance: 'none',\r\n    backgroundColor: 'transparent',\r\n    border: '0 solid black',\r\n    borderRadius: 0,\r\n    boxSizing: 'border-box',\r\n    font: '14px System',\r\n    margin: 0,\r\n    padding: 0,\r\n    resize: 'none'\r\n  }\r\n});\r\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}