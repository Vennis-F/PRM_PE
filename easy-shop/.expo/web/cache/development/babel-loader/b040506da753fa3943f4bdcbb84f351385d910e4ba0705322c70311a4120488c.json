{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToastContainer = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jsxFileName = 'src/basic/ToastContainer.js';\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\nvar _commonColor = require(\"../theme/variables/commonColor\");\nvar _Text = require(\"./Text\");\nvar _Button = require(\"./Button\");\nvar _Toast = require(\"./Toast\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\nvar ToastContainer = function (_Component) {\n  _inherits(ToastContainer, _Component);\n  _createClass(ToastContainer, null, [{\n    key: 'show',\n    value: function show(_ref) {\n      var config = _objectWithoutProperties(_ref, []);\n      this.toastInstance._root.showToast({\n        config: config\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (this.toastInstance._root.getModalState()) {\n        this.toastInstance._root.closeToast('functionCall');\n      }\n    }\n  }]);\n  function ToastContainer(props) {\n    _classCallCheck(this, ToastContainer);\n    var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n    _this.closeModal = function (reason) {\n      _this.setState({\n        modalVisible: false\n      });\n      var onClose = _this.state.onClose;\n      if (onClose && typeof onClose === 'function') {\n        onClose(reason);\n      }\n    };\n    _this.state = {\n      fadeAnim: new _reactNative.Animated.Value(0),\n      pan: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_this);\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_this);\n    _this._panResponder = _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, _ref2) {\n        var dx = _ref2.dx;\n        if (dx !== 0) {\n          _reactNative.Animated.timing(_this.state.pan, {\n            toValue: {\n              x: dx,\n              y: 0\n            },\n            duration: 100\n          }).start(function () {\n            return _this.closeToast('swipe');\n          });\n        }\n      }\n    });\n    return _this;\n  }\n  _createClass(ToastContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n    }\n  }, {\n    key: 'getToastStyle',\n    value: function getToastStyle() {\n      return {\n        position: POSITION.ABSOLUTE,\n        opacity: this.state.fadeAnim,\n        width: '100%',\n        elevation: 9,\n        paddingHorizontal: _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 20 : 0,\n        top: this.state.position === POSITION.TOP ? 30 : undefined,\n        bottom: this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n      };\n    }\n  }, {\n    key: 'getTop',\n    value: function getTop() {\n      if (_reactNative.Platform.OS === _commonColor.PLATFORM.IOS) {\n        if (this.state.isKeyboardVisible) {\n          return this.state.keyboardHeight;\n        }\n        return 30;\n      }\n      return 0;\n    }\n  }, {\n    key: 'getButtonText',\n    value: function getButtonText(buttonText) {\n      if (buttonText) {\n        if (buttonText.trim().length === 0) {\n          return undefined;\n        }\n        return buttonText;\n      }\n      return undefined;\n    }\n  }, {\n    key: 'getModalState',\n    value: function getModalState() {\n      return this.state.modalVisible;\n    }\n  }, {\n    key: 'keyboardDidHide',\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardHeight: 0,\n        isKeyboardVisible: false\n      });\n    }\n  }, {\n    key: 'keyboardDidShow',\n    value: function keyboardDidShow(e) {\n      this.setState({\n        keyboardHeight: e.endCoordinates.height,\n        isKeyboardVisible: true\n      });\n    }\n  }, {\n    key: 'showToast',\n    value: function showToast(_ref3) {\n      var config = _ref3.config;\n      this.setState({\n        modalVisible: true,\n        text: config.text,\n        buttonText: this.getButtonText(config.buttonText),\n        type: config.type,\n        position: config.position ? config.position : POSITION.BOTTOM,\n        supportedOrientations: config.supportedOrientations,\n        style: config.style,\n        buttonTextStyle: config.buttonTextStyle,\n        buttonStyle: config.buttonStyle,\n        textStyle: config.textStyle,\n        onClose: config.onClose\n      });\n      if (this.closeTimeout) {\n        clearTimeout(this.closeTimeout);\n      }\n      if (config.duration !== 0) {\n        var duration = config.duration > 0 ? config.duration : 1500;\n        this.closeTimeout = setTimeout(this.closeToast.bind(this, 'timeout'), duration);\n      }\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: false\n      }).start();\n    }\n  }, {\n    key: 'closeToast',\n    value: function closeToast(reason) {\n      var _this2 = this;\n      clearTimeout(this.closeTimeout);\n      _reactNative.Animated.timing(this.state.fadeAnim, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: false\n      }).start(function () {\n        _this2.closeModal(reason);\n        _this2.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n      if (this.state.modalVisible) {\n        var _state$pan = this.state.pan,\n          x = _state$pan.x,\n          y = _state$pan.y;\n        return _react2.default.createElement(_reactNative.Animated.View, _extends({}, this._panResponder.panHandlers, {\n          style: [this.getToastStyle(), {\n            transform: [{\n              translateX: x\n            }, {\n              translateY: y\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          }\n        }), _react2.default.createElement(_Toast.Toast, {\n          style: [this.state.style],\n          danger: this.state.type === 'danger',\n          success: this.state.type === 'success',\n          warning: this.state.type === 'warning',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, this.state.text), this.state.buttonText && _react2.default.createElement(_Button.Button, {\n          style: this.state.buttonStyle,\n          onPress: function onPress() {\n            return _this3.closeToast('user');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, _react2.default.createElement(_Text.Text, {\n          style: this.state.buttonTextStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, this.state.buttonText))));\n      }\n      return null;\n    }\n  }]);\n  return ToastContainer;\n}(_react.Component);\nToastContainer.propTypes = _extends({}, _reactNative.ViewPropTypes);\nvar StyledToastContainer = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.ToastContainer', {}, _mapPropsToStyleNames2.default)(ToastContainer);\nexports.ToastContainer = StyledToastContainer;","map":{"version":3,"mappings":"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","names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","config","toastInstance","_root","showToast","getModalState","closeToast","props","_classCallCheck","_this","closeModal","reason","setState","modalVisible","onClose","state","fadeAnim","Animated","Value","pan","ValueXY","x","y","keyboardHeight","isKeyboardVisible","keyboardDidHide","bind","keyboardDidShow","_panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","dx","timing","toValue","duration","start","Keyboard","addListener","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","closeTimeout","clearTimeout","setTimeout","useNativeDriver","_this2","setValue","_react2","_reactNative","View","panHandlers","getToastStyle","transform","translateX","translateY","__source","fileName","lineNumber","_Toast","danger","success","warning","_Text","_Button","onPress","_this3","Component","propTypes","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"sources":["D:\\Learn\\Nodejs\\PRM_SWD_Project\\mobile\\easy-shop\\node_modules\\native-base\\src\\basic\\ToastContainer.js"],"sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport {\n  Keyboard,\n  Platform,\n  Animated,\n  ViewPropTypes,\n  PanResponder\n} from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top'\n};\n\nclass ToastContainer extends Component {\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\n      keyboardHeight: 0,\n      isKeyboardVisible: false,\n      modalVisible: false\n    };\n\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, { dx }) => {\n        if (dx !== 0) {\n          Animated.timing(this.state.pan, {\n            toValue: { x: dx, y: 0 },\n            duration: 100\n          }).start(() => this.closeToast('swipe'));\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n\n  getToastStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      if (this.state.isKeyboardVisible) {\n        return this.state.keyboardHeight;\n      }\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  static toastInstance;\n\n  keyboardDidHide() {\n    this.setState({\n      keyboardHeight: 0,\n      isKeyboardVisible: false\n    });\n  }\n\n  keyboardDidShow(e) {\n    this.setState({\n      keyboardHeight: e.endCoordinates.height,\n      isKeyboardVisible: true\n    });\n  }\n\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 1500;\n      this.closeTimeout = setTimeout(\n        this.closeToast.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  }\n  closeModal = (reason) => {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  }\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start(() => {\n      this.closeModal(reason);\n      this.state.pan.setValue({ x: 0, y: 0 });\n    });\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      const { x, y } = this.state.pan;\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={[\n            this.getToastStyle(),\n            { transform: [{ translateX: x }, { translateY: y }] }\n          ]}\n        >\n          <Toast\n            style={[this.state.style]}\n            danger={this.state.type === 'danger'}\n            success={this.state.type === 'success'}\n            warning={this.state.type === 'warning'}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast('user')}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes\n};\n\nconst StyledToastContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}