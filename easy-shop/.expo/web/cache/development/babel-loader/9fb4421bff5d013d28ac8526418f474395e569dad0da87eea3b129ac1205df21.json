{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport EventEmitter from \"../emitter/EventEmitter\";\nimport EventSubscriptionVendor from \"../emitter/EventSubscriptionVendor\";\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\nvar RCTDeviceEventEmitter = function (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n  function RCTDeviceEventEmitter() {\n    var _this;\n    var sharedSubscriber = new EventSubscriptionVendor();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n  var _proto = RCTDeviceEventEmitter.prototype;\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n  return RCTDeviceEventEmitter;\n}(EventEmitter);\nexport default new RCTDeviceEventEmitter();","map":{"version":3,"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","EventEmitter","EventSubscriptionVendor","__DEV__","process","env","NODE_ENV","checkNativeEventModule","eventType","lastIndexOf","Error","RCTDeviceEventEmitter","_EventEmitter","_this","sharedSubscriber","call","_proto","addListener","listener","context","removeAllListeners","removeSubscription","subscription","emitter"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n'use strict';\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nimport EventEmitter from '../emitter/EventEmitter';\r\nimport EventSubscriptionVendor from '../emitter/EventSubscriptionVendor';\r\n\r\nvar __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nfunction checkNativeEventModule(eventType) {\r\n  if (eventType) {\r\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\r\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\r\n    }\r\n\r\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\r\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\r\n    }\r\n\r\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\r\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\r\n    }\r\n  }\r\n}\r\n/**\r\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\r\n * adding all event listeners directly to RCTDeviceEventEmitter.\r\n */\r\n\r\n\r\nvar RCTDeviceEventEmitter =\r\n/*#__PURE__*/\r\nfunction (_EventEmitter) {\r\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\r\n\r\n  function RCTDeviceEventEmitter() {\r\n    var _this;\r\n\r\n    var sharedSubscriber = new EventSubscriptionVendor();\r\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\r\n    _this.sharedSubscriber = sharedSubscriber;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = RCTDeviceEventEmitter.prototype;\r\n\r\n  _proto.addListener = function addListener(eventType, listener, context) {\r\n    if (__DEV__) {\r\n      checkNativeEventModule(eventType);\r\n    }\r\n\r\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\r\n  };\r\n\r\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\r\n    if (__DEV__) {\r\n      checkNativeEventModule(eventType);\r\n    }\r\n\r\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\r\n  };\r\n\r\n  _proto.removeSubscription = function removeSubscription(subscription) {\r\n    if (subscription.emitter !== this) {\r\n      subscription.emitter.removeSubscription(subscription);\r\n    } else {\r\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\r\n    }\r\n  };\r\n\r\n  return RCTDeviceEventEmitter;\r\n}(EventEmitter);\r\n\r\nexport default new RCTDeviceEventEmitter();"],"mappings":"AASA,YAAY;;AAEZ,SAASA,cAAc,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAED,QAAQ,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,CAACC,SAAS,CAAC;EAAEF,QAAQ,CAACE,SAAS,CAACG,WAAW,GAAGL,QAAQ;EAAEA,QAAQ,CAACM,SAAS,GAAGL,UAAU;AAAE;AAEtL,OAAOM,YAAY;AACnB,OAAOC,uBAAuB;AAE9B,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AAEnD,SAASC,sBAAsB,CAACC,SAAS,EAAE;EACzC,IAAIA,SAAS,EAAE;IACb,IAAIA,SAAS,CAACC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;MAC/C,MAAM,IAAIC,KAAK,CAAC,GAAG,GAAGF,SAAS,GAAG,0DAA0D,CAAC;IAC/F;IAEA,IAAIA,SAAS,CAACC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;MAC9C,MAAM,IAAIC,KAAK,CAAC,GAAG,GAAGF,SAAS,GAAG,sDAAsD,CAAC;IAC3F;IAEA,IAAIA,SAAS,KAAK,mBAAmB,IAAIA,SAAS,KAAK,eAAe,EAAE;MACtE,MAAM,IAAIE,KAAK,CAAC,GAAG,GAAGF,SAAS,GAAG,sDAAsD,CAAC;IAC3F;EACF;AACF;AAOA,IAAIG,qBAAqB,GAEzB,UAAUC,aAAa,EAAE;EACvBnB,cAAc,CAACkB,qBAAqB,EAAEC,aAAa,CAAC;EAEpD,SAASD,qBAAqB,GAAG;IAC/B,IAAIE,KAAK;IAET,IAAIC,gBAAgB,GAAG,IAAIZ,uBAAuB,EAAE;IACpDW,KAAK,GAAGD,aAAa,CAACG,IAAI,CAAC,IAAI,EAAED,gBAAgB,CAAC,IAAI,IAAI;IAC1DD,KAAK,CAACC,gBAAgB,GAAGA,gBAAgB;IACzC,OAAOD,KAAK;EACd;EAEA,IAAIG,MAAM,GAAGL,qBAAqB,CAACf,SAAS;EAE5CoB,MAAM,CAACC,WAAW,GAAG,SAASA,WAAW,CAACT,SAAS,EAAEU,QAAQ,EAAEC,OAAO,EAAE;IACtE,IAAIhB,OAAO,EAAE;MACXI,sBAAsB,CAACC,SAAS,CAAC;IACnC;IAEA,OAAOI,aAAa,CAAChB,SAAS,CAACqB,WAAW,CAACF,IAAI,CAAC,IAAI,EAAEP,SAAS,EAAEU,QAAQ,EAAEC,OAAO,CAAC;EACrF,CAAC;EAEDH,MAAM,CAACI,kBAAkB,GAAG,SAASA,kBAAkB,CAACZ,SAAS,EAAE;IACjE,IAAIL,OAAO,EAAE;MACXI,sBAAsB,CAACC,SAAS,CAAC;IACnC;IAEAI,aAAa,CAAChB,SAAS,CAACwB,kBAAkB,CAACL,IAAI,CAAC,IAAI,EAAEP,SAAS,CAAC;EAClE,CAAC;EAEDQ,MAAM,CAACK,kBAAkB,GAAG,SAASA,kBAAkB,CAACC,YAAY,EAAE;IACpE,IAAIA,YAAY,CAACC,OAAO,KAAK,IAAI,EAAE;MACjCD,YAAY,CAACC,OAAO,CAACF,kBAAkB,CAACC,YAAY,CAAC;IACvD,CAAC,MAAM;MACLV,aAAa,CAAChB,SAAS,CAACyB,kBAAkB,CAACN,IAAI,CAAC,IAAI,EAAEO,YAAY,CAAC;IACrE;EACF,CAAC;EAED,OAAOX,qBAAqB;AAC9B,CAAC,CAACV,YAAY,CAAC;AAEf,eAAe,IAAIU,qBAAqB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}