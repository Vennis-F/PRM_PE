{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Learn\\\\Nodejs\\\\PRM_SWD_Project\\\\mobile\\\\easy-shop\\\\node_modules\\\\react-native-gesture-handler\\\\touchables\\\\GenericTouchable.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State, BaseButton } from \"../GestureHandler\";\nimport PropTypes from 'prop-types';\nexport var TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nvar PublicPropTypes = {\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool\n};\nvar InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func\n};\nvar GenericTouchable = function (_Component) {\n  _inherits(GenericTouchable, _Component);\n  var _super = _createSuper(GenericTouchable);\n  function GenericTouchable() {\n    var _this;\n    _classCallCheck(this, GenericTouchable);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.longPressDetected = false;\n    _this.pointerInside = true;\n    _this.STATE = TOUCHABLE_STATE.UNDETERMINED;\n    _this.onGestureEvent = function (_ref) {\n      var pointerInside = _ref.nativeEvent.pointerInside;\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n      _this.pointerInside = pointerInside;\n    };\n    _this.onHandlerStateChange = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var state = nativeEvent.state;\n      if (state === State.CANCELLED || state === State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n        _this.handleGoToUndetermined();\n        if (shouldCallOnPress) {\n          _this.props.onPress && _this.props.onPress();\n        }\n      }\n    };\n    _this.onLongPressDetected = function () {\n      _this.longPressDetected = true;\n      _this.props.onLongPress();\n    };\n    return _this;\n  }\n  _createClass(GenericTouchable, [{\n    key: \"handlePressIn\",\n    value: function handlePressIn() {\n      var _this2 = this;\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(function () {\n          _this2.moveToState(TOUCHABLE_STATE.BEGAN);\n          _this2.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    }\n  }, {\n    key: \"handleMoveOutside\",\n    value: function handleMoveOutside() {\n      var _this3 = this;\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(function () {\n          _this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          _this3.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    }\n  }, {\n    key: \"handleGoToUndetermined\",\n    value: function handleGoToUndetermined() {\n      var _this4 = this;\n      clearTimeout(this.pressOutTimeout);\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(function () {\n          if (_this4.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this4.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n          _this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n          _this4.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState) {\n      if (newState === this.STATE) {\n        return;\n      }\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        this.props.onPressIn && this.props.onPressIn();\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.props.onPressOut && this.props.onPressOut();\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          this.props.onPressOut && this.props.onPressOut();\n        }\n      }\n      this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n      this.STATE = newState;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"onMoveIn\",\n    value: function onMoveIn() {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    }\n  }, {\n    key: \"onMoveOut\",\n    value: function onMoveOut() {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityComponentType: this.props.accessibilityComponentType,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityStates: this.props.accessibilityStates,\n        accessibilityTraits: this.props.accessibilityTraits,\n        nativeID: this.props.nativeID,\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop\n      };\n      return React.createElement(BaseButton, _extends({\n        style: this.props.containerStyle,\n        onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: this.props.hitSlop,\n        shouldActivateOnStart: this.props.shouldActivateOnStart,\n        disallowInterruption: this.props.disallowInterruption,\n        testID: this.props.testID\n      }, this.props.extraButtonProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, _extends({}, coreProps, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }), this.props.children));\n    }\n  }]);\n  return GenericTouchable;\n}(Component);\nGenericTouchable.publicPropTypes = PublicPropTypes;\nGenericTouchable.internalPropTypes = InternalPropTypes;\nGenericTouchable.propTypes = _objectSpread(_objectSpread({}, InternalPropTypes), PublicPropTypes);\nGenericTouchable.defaultProps = {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent'\n  }\n};\nexport { GenericTouchable as default };","map":{"version":3,"names":["React","Component","State","BaseButton","PropTypes","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","shouldActivateOnStart","disallowInterruption","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","longPressDetected","pointerInside","STATE","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","handlePressIn","END","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","props","onLongPressDetected","pressInTimeout","setTimeout","time","longPressTimeout","clearTimeout","reset","newState","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","containerStyle","style","children","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor"],"sources":["D:/Learn/Nodejs/PRM_SWD_Project/mobile/easy-shop/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Animated, Platform } from 'react-native';\r\nimport { State, BaseButton } from '../GestureHandler';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Each touchable is a states' machine which preforms transitions.\r\n * On very beginning (and on the very end or recognition) touchable is\r\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\r\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\r\n * finishes in UNDETERMINED state.\r\n */\r\nexport const TOUCHABLE_STATE = {\r\n  UNDETERMINED: 0,\r\n  BEGAN: 1,\r\n  MOVED_OUTSIDE: 2,\r\n};\r\n\r\nconst PublicPropTypes = {\r\n  // Decided to drop not used fields from RN's implementation.\r\n  // e.g. onBlur and onFocus as well as deprecated props.\r\n  accessible: PropTypes.bool,\r\n  accessibilityLabel: PropTypes.node,\r\n  accessibilityHint: PropTypes.string,\r\n  hitSlop: PropTypes.shape({\r\n    top: PropTypes.number,\r\n    left: PropTypes.number,\r\n    bottom: PropTypes.number,\r\n    right: PropTypes.number,\r\n  }),\r\n  disabled: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n  onPressIn: PropTypes.func,\r\n  onPressOut: PropTypes.func,\r\n  onLayout: PropTypes.func,\r\n  onLongPress: PropTypes.func,\r\n  nativeID: PropTypes.string,\r\n  testID: PropTypes.string,\r\n  delayPressIn: PropTypes.number,\r\n  delayPressOut: PropTypes.number,\r\n  delayLongPress: PropTypes.number,\r\n  shouldActivateOnStart: PropTypes.bool,\r\n  disallowInterruption: PropTypes.bool,\r\n};\r\n\r\nconst InternalPropTypes = {\r\n  extraButtonProps: PropTypes.object,\r\n  onStateChange: PropTypes.func,\r\n};\r\n\r\n/**\r\n * GenericTouchable is not intented to be used as it.\r\n * Should be treated as a source for the rest of touchables\r\n */\r\n\r\nexport default class GenericTouchable extends Component {\r\n  static publicPropTypes = PublicPropTypes;\r\n  static internalPropTypes = InternalPropTypes;\r\n\r\n  // The prop type collections have to be outside of the class, as metro\r\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\r\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\r\n  static propTypes = {\r\n    ...InternalPropTypes,\r\n    ...PublicPropTypes,\r\n  };\r\n\r\n  static defaultProps = {\r\n    delayLongPress: 600,\r\n    extraButtonProps: {\r\n      rippleColor: 'transparent',\r\n    },\r\n  };\r\n\r\n  // timeout handlers\r\n  pressInTimeout;\r\n  pressOutTimeout;\r\n  longPressTimeout;\r\n\r\n  // This flag is required since recognition of longPress implies not-invoking onPress\r\n  longPressDetected = false;\r\n\r\n  pointerInside = true;\r\n\r\n  // State of touchable\r\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\r\n\r\n  // handlePressIn in called on first touch on traveling inside component.\r\n  // Handles state transition with delay.\r\n  handlePressIn() {\r\n    if (this.props.delayPressIn) {\r\n      this.pressInTimeout = setTimeout(() => {\r\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\r\n        this.pressInTimeout = null;\r\n      }, this.props.delayPressIn);\r\n    } else {\r\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\r\n    }\r\n    if (this.props.onLongPress) {\r\n      const time =\r\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\r\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\r\n    }\r\n  }\r\n  // handleMoveOutside in called on traveling outside component.\r\n  // Handles state transition with delay.\r\n  handleMoveOutside() {\r\n    if (this.props.delayPressOut) {\r\n      this.pressOutTimeout =\r\n        this.pressOutTimeout ||\r\n        setTimeout(() => {\r\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\r\n          this.pressOutTimeout = null;\r\n        }, this.props.delayPressOut);\r\n    } else {\r\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\r\n    }\r\n  }\r\n\r\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\r\n  handleGoToUndetermined() {\r\n    clearTimeout(this.pressOutTimeout);\r\n    if (this.props.delayPressOut) {\r\n      this.pressOutTimeout = setTimeout(() => {\r\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\r\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\r\n        }\r\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\r\n        this.pressOutTimeout = null;\r\n      }, this.props.delayPressOut);\r\n    } else {\r\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\r\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\r\n      }\r\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reset();\r\n  }\r\n  // reset timeout to prevent memory leaks.\r\n  reset() {\r\n    this.longPressDetected = false;\r\n    this.pointerInside = true;\r\n    clearTimeout(this.pressInTimeout);\r\n    clearTimeout(this.pressOutTimeout);\r\n    clearTimeout(this.longPressTimeout);\r\n    this.pressOutTimeout = null;\r\n    this.longPressTimeout = null;\r\n    this.pressInTimeout = null;\r\n  }\r\n\r\n  // All states' transitions are defined here.\r\n  moveToState(newState) {\r\n    if (newState === this.STATE) {\r\n      // Ignore dummy transitions\r\n      return;\r\n    }\r\n    if (newState === TOUCHABLE_STATE.BEGAN) {\r\n      // First touch and moving inside\r\n      this.props.onPressIn && this.props.onPressIn();\r\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\r\n      // Moving outside\r\n      this.props.onPressOut && this.props.onPressOut();\r\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\r\n      // Need to reset each time on transition to UNDETERMINED\r\n      this.reset();\r\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\r\n        // ... and if it happens inside button.\r\n        this.props.onPressOut && this.props.onPressOut();\r\n      }\r\n    }\r\n    // Finally call lister (used by subclasses)\r\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\r\n    // ... and make transition.\r\n    this.STATE = newState;\r\n  }\r\n\r\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\r\n    if (this.pointerInside !== pointerInside) {\r\n      if (pointerInside) {\r\n        this.onMoveIn();\r\n      } else {\r\n        this.onMoveOut();\r\n      }\r\n    }\r\n    this.pointerInside = pointerInside;\r\n  };\r\n\r\n  onHandlerStateChange = ({ nativeEvent }) => {\r\n    const { state } = nativeEvent;\r\n    if (state === State.CANCELLED || state === State.FAILED) {\r\n      // Need to handle case with external cancellation (e.g. by ScrollView)\r\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\r\n    } else if (\r\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\r\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\r\n      // On iOS event on \"Began\" is not delivered.\r\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\r\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\r\n    ) {\r\n      // Moving inside requires\r\n      this.handlePressIn();\r\n    } else if (state === State.END) {\r\n      const shouldCallOnPress =\r\n        !this.longPressDetected &&\r\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\r\n        this.pressOutTimeout === null;\r\n      this.handleGoToUndetermined();\r\n      if (shouldCallOnPress) {\r\n        // Calls only inside component whether no long press was called previously\r\n        this.props.onPress && this.props.onPress();\r\n      }\r\n    }\r\n  };\r\n\r\n  onLongPressDetected = () => {\r\n    this.longPressDetected = true;\r\n    this.props.onLongPress();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // to prevent memory leaks\r\n    this.reset();\r\n  }\r\n\r\n  onMoveIn() {\r\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\r\n      // This call is not throttled with delays (like in RN's implementation).\r\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\r\n    }\r\n  }\r\n\r\n  onMoveOut() {\r\n    // long press should no longer be detected\r\n    clearTimeout(this.longPressTimeout);\r\n    this.longPressTimeout = null;\r\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\r\n      this.handleMoveOutside();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const coreProps = {\r\n      accessible: this.props.accessible !== false,\r\n      accessibilityLabel: this.props.accessibilityLabel,\r\n      accessibilityHint: this.props.accessibilityHint,\r\n      accessibilityComponentType: this.props.accessibilityComponentType,\r\n      accessibilityRole: this.props.accessibilityRole,\r\n      accessibilityStates: this.props.accessibilityStates,\r\n      accessibilityTraits: this.props.accessibilityTraits,\r\n      nativeID: this.props.nativeID,\r\n      onLayout: this.props.onLayout,\r\n      hitSlop: this.props.hitSlop,\r\n    };\r\n\r\n    return (\r\n      <BaseButton\r\n        style={this.props.containerStyle}\r\n        onHandlerStateChange={\r\n          this.props.disabled ? null : this.onHandlerStateChange\r\n        }\r\n        onGestureEvent={this.onGestureEvent}\r\n        hitSlop={this.props.hitSlop}\r\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\r\n        disallowInterruption={this.props.disallowInterruption}\r\n        testID={this.props.testID}\r\n        {...this.props.extraButtonProps}>\r\n        <Animated.View {...coreProps} style={this.props.style}>\r\n          {this.props.children}\r\n        </Animated.View>\r\n      </BaseButton>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}